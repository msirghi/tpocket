// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AboutYouForm component should match snapshot 1`] = `
<ApolloProvider
  client={
    ApolloClient {
      "cache": InMemoryCache {
        "addTypename": true,
        "cacheKeyRoot": KeyTrie {
          "weakness": true,
        },
        "config": Object {
          "addTypename": true,
          "dataIdFromObject": [Function],
          "fragmentMatcher": HeuristicFragmentMatcher {},
          "freezeResults": false,
          "resultCaching": true,
        },
        "data": DepTrackingCache {
          "data": Object {},
          "depend": [Function],
        },
        "maybeBroadcastWatch": [Function],
        "optimisticData": DepTrackingCache {
          "data": Object {},
          "depend": [Function],
        },
        "silenceBroadcast": false,
        "storeReader": StoreReader {
          "executeSelectionSet": [Function],
          "executeStoreQuery": [Function],
          "executeSubSelectedArray": [Function],
          "freezeResults": false,
        },
        "storeWriter": StoreWriter {},
        "typenameDocumentCache": Map {},
        "watches": Set {},
      },
      "clearStoreCallbacks": Array [],
      "defaultOptions": Object {},
      "disableNetworkFetches": false,
      "link": ApolloLink {
        "request": [Function],
      },
      "localState": LocalState {
        "cache": InMemoryCache {
          "addTypename": true,
          "cacheKeyRoot": KeyTrie {
            "weakness": true,
          },
          "config": Object {
            "addTypename": true,
            "dataIdFromObject": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
            "freezeResults": false,
            "resultCaching": true,
          },
          "data": DepTrackingCache {
            "data": Object {},
            "depend": [Function],
          },
          "maybeBroadcastWatch": [Function],
          "optimisticData": DepTrackingCache {
            "data": Object {},
            "depend": [Function],
          },
          "silenceBroadcast": false,
          "storeReader": StoreReader {
            "executeSelectionSet": [Function],
            "executeStoreQuery": [Function],
            "executeSubSelectedArray": [Function],
            "freezeResults": false,
          },
          "storeWriter": StoreWriter {},
          "typenameDocumentCache": Map {},
          "watches": Set {},
        },
        "client": [Circular],
      },
      "mutate": [Function],
      "query": [Function],
      "queryDeduplication": true,
      "queryManager": QueryManager {
        "assumeImmutableResults": false,
        "clientAwareness": Object {
          "name": undefined,
          "version": undefined,
        },
        "dataStore": DataStore {
          "cache": InMemoryCache {
            "addTypename": true,
            "cacheKeyRoot": KeyTrie {
              "weakness": true,
            },
            "config": Object {
              "addTypename": true,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
              "freezeResults": false,
              "resultCaching": true,
            },
            "data": DepTrackingCache {
              "data": Object {},
              "depend": [Function],
            },
            "maybeBroadcastWatch": [Function],
            "optimisticData": DepTrackingCache {
              "data": Object {},
              "depend": [Function],
            },
            "silenceBroadcast": false,
            "storeReader": StoreReader {
              "executeSelectionSet": [Function],
              "executeStoreQuery": [Function],
              "executeSubSelectedArray": [Function],
              "freezeResults": false,
            },
            "storeWriter": StoreWriter {},
            "typenameDocumentCache": Map {},
            "watches": Set {},
          },
        },
        "fetchQueryRejectFns": Map {},
        "idCounter": 1,
        "inFlightLinkObservables": Map {},
        "link": ApolloLink {
          "request": [Function],
        },
        "localState": LocalState {
          "cache": InMemoryCache {
            "addTypename": true,
            "cacheKeyRoot": KeyTrie {
              "weakness": true,
            },
            "config": Object {
              "addTypename": true,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
              "freezeResults": false,
              "resultCaching": true,
            },
            "data": DepTrackingCache {
              "data": Object {},
              "depend": [Function],
            },
            "maybeBroadcastWatch": [Function],
            "optimisticData": DepTrackingCache {
              "data": Object {},
              "depend": [Function],
            },
            "silenceBroadcast": false,
            "storeReader": StoreReader {
              "executeSelectionSet": [Function],
              "executeStoreQuery": [Function],
              "executeSubSelectedArray": [Function],
              "freezeResults": false,
            },
            "storeWriter": StoreWriter {},
            "typenameDocumentCache": Map {},
            "watches": Set {},
          },
          "client": [Circular],
        },
        "mutationStore": MutationStore {
          "store": Object {},
        },
        "onBroadcast": [Function],
        "pollingInfoByQueryId": Map {},
        "queries": Map {},
        "queryDeduplication": true,
        "queryStore": QueryStore {
          "store": Object {},
        },
        "ssrMode": false,
        "transformCache": WeakMap {},
      },
      "reFetchObservableQueries": [Function],
      "resetStore": [Function],
      "resetStoreCallbacks": Array [],
      "store": DataStore {
        "cache": InMemoryCache {
          "addTypename": true,
          "cacheKeyRoot": KeyTrie {
            "weakness": true,
          },
          "config": Object {
            "addTypename": true,
            "dataIdFromObject": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
            "freezeResults": false,
            "resultCaching": true,
          },
          "data": DepTrackingCache {
            "data": Object {},
            "depend": [Function],
          },
          "maybeBroadcastWatch": [Function],
          "optimisticData": DepTrackingCache {
            "data": Object {},
            "depend": [Function],
          },
          "silenceBroadcast": false,
          "storeReader": StoreReader {
            "executeSelectionSet": [Function],
            "executeStoreQuery": [Function],
            "executeSubSelectedArray": [Function],
            "freezeResults": false,
          },
          "storeWriter": StoreWriter {},
          "typenameDocumentCache": Map {},
          "watches": Set {},
        },
      },
      "typeDefs": undefined,
      "version": "2.6.10",
      "watchQuery": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <AboutYouForm
        handleNext={[MockFunction]}
        handleRegister={[MockFunction]}
        setEncryptedUserId={[MockFunction]}
      >
        <Formik
          data-testid="formik"
          initialValues={
            Object {
              "checked": false,
              "email": "",
              "firstName": "",
              "lastName": "",
              "password": "",
              "repeatPassword": "",
            }
          }
          onSubmit={[Function]}
          validate={[Function]}
          validateOnChange={true}
        >
          <Form>
            <form
              action="#"
              onReset={[Function]}
              onSubmit={[Function]}
            >
              <WithStyles(ForwardRef(Typography))
                gutterBottom={true}
                variant="h6"
              >
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  gutterBottom={true}
                  variant="h6"
                >
                  <h6
                    className="MuiTypography-root MuiTypography-h6 MuiTypography-gutterBottom"
                  >
                    forms.aboutYou.title
                  </h6>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
              <WithStyles(ForwardRef(Grid))
                container={true}
                spacing={3}
              >
                <ForwardRef(Grid)
                  classes={
                    Object {
                      "align-content-xs-center": "MuiGrid-align-content-xs-center",
                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                      "align-items-xs-center": "MuiGrid-align-items-xs-center",
                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                      "container": "MuiGrid-container",
                      "direction-xs-column": "MuiGrid-direction-xs-column",
                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                      "grid-lg-1": "MuiGrid-grid-lg-1",
                      "grid-lg-10": "MuiGrid-grid-lg-10",
                      "grid-lg-11": "MuiGrid-grid-lg-11",
                      "grid-lg-12": "MuiGrid-grid-lg-12",
                      "grid-lg-2": "MuiGrid-grid-lg-2",
                      "grid-lg-3": "MuiGrid-grid-lg-3",
                      "grid-lg-4": "MuiGrid-grid-lg-4",
                      "grid-lg-5": "MuiGrid-grid-lg-5",
                      "grid-lg-6": "MuiGrid-grid-lg-6",
                      "grid-lg-7": "MuiGrid-grid-lg-7",
                      "grid-lg-8": "MuiGrid-grid-lg-8",
                      "grid-lg-9": "MuiGrid-grid-lg-9",
                      "grid-lg-auto": "MuiGrid-grid-lg-auto",
                      "grid-lg-true": "MuiGrid-grid-lg-true",
                      "grid-md-1": "MuiGrid-grid-md-1",
                      "grid-md-10": "MuiGrid-grid-md-10",
                      "grid-md-11": "MuiGrid-grid-md-11",
                      "grid-md-12": "MuiGrid-grid-md-12",
                      "grid-md-2": "MuiGrid-grid-md-2",
                      "grid-md-3": "MuiGrid-grid-md-3",
                      "grid-md-4": "MuiGrid-grid-md-4",
                      "grid-md-5": "MuiGrid-grid-md-5",
                      "grid-md-6": "MuiGrid-grid-md-6",
                      "grid-md-7": "MuiGrid-grid-md-7",
                      "grid-md-8": "MuiGrid-grid-md-8",
                      "grid-md-9": "MuiGrid-grid-md-9",
                      "grid-md-auto": "MuiGrid-grid-md-auto",
                      "grid-md-true": "MuiGrid-grid-md-true",
                      "grid-sm-1": "MuiGrid-grid-sm-1",
                      "grid-sm-10": "MuiGrid-grid-sm-10",
                      "grid-sm-11": "MuiGrid-grid-sm-11",
                      "grid-sm-12": "MuiGrid-grid-sm-12",
                      "grid-sm-2": "MuiGrid-grid-sm-2",
                      "grid-sm-3": "MuiGrid-grid-sm-3",
                      "grid-sm-4": "MuiGrid-grid-sm-4",
                      "grid-sm-5": "MuiGrid-grid-sm-5",
                      "grid-sm-6": "MuiGrid-grid-sm-6",
                      "grid-sm-7": "MuiGrid-grid-sm-7",
                      "grid-sm-8": "MuiGrid-grid-sm-8",
                      "grid-sm-9": "MuiGrid-grid-sm-9",
                      "grid-sm-auto": "MuiGrid-grid-sm-auto",
                      "grid-sm-true": "MuiGrid-grid-sm-true",
                      "grid-xl-1": "MuiGrid-grid-xl-1",
                      "grid-xl-10": "MuiGrid-grid-xl-10",
                      "grid-xl-11": "MuiGrid-grid-xl-11",
                      "grid-xl-12": "MuiGrid-grid-xl-12",
                      "grid-xl-2": "MuiGrid-grid-xl-2",
                      "grid-xl-3": "MuiGrid-grid-xl-3",
                      "grid-xl-4": "MuiGrid-grid-xl-4",
                      "grid-xl-5": "MuiGrid-grid-xl-5",
                      "grid-xl-6": "MuiGrid-grid-xl-6",
                      "grid-xl-7": "MuiGrid-grid-xl-7",
                      "grid-xl-8": "MuiGrid-grid-xl-8",
                      "grid-xl-9": "MuiGrid-grid-xl-9",
                      "grid-xl-auto": "MuiGrid-grid-xl-auto",
                      "grid-xl-true": "MuiGrid-grid-xl-true",
                      "grid-xs-1": "MuiGrid-grid-xs-1",
                      "grid-xs-10": "MuiGrid-grid-xs-10",
                      "grid-xs-11": "MuiGrid-grid-xs-11",
                      "grid-xs-12": "MuiGrid-grid-xs-12",
                      "grid-xs-2": "MuiGrid-grid-xs-2",
                      "grid-xs-3": "MuiGrid-grid-xs-3",
                      "grid-xs-4": "MuiGrid-grid-xs-4",
                      "grid-xs-5": "MuiGrid-grid-xs-5",
                      "grid-xs-6": "MuiGrid-grid-xs-6",
                      "grid-xs-7": "MuiGrid-grid-xs-7",
                      "grid-xs-8": "MuiGrid-grid-xs-8",
                      "grid-xs-9": "MuiGrid-grid-xs-9",
                      "grid-xs-auto": "MuiGrid-grid-xs-auto",
                      "grid-xs-true": "MuiGrid-grid-xs-true",
                      "item": "MuiGrid-item",
                      "justify-xs-center": "MuiGrid-justify-xs-center",
                      "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                      "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                      "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                      "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                      "root": "MuiGrid-root",
                      "spacing-xs-1": "MuiGrid-spacing-xs-1",
                      "spacing-xs-10": "MuiGrid-spacing-xs-10",
                      "spacing-xs-2": "MuiGrid-spacing-xs-2",
                      "spacing-xs-3": "MuiGrid-spacing-xs-3",
                      "spacing-xs-4": "MuiGrid-spacing-xs-4",
                      "spacing-xs-5": "MuiGrid-spacing-xs-5",
                      "spacing-xs-6": "MuiGrid-spacing-xs-6",
                      "spacing-xs-7": "MuiGrid-spacing-xs-7",
                      "spacing-xs-8": "MuiGrid-spacing-xs-8",
                      "spacing-xs-9": "MuiGrid-spacing-xs-9",
                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                      "zeroMinWidth": "MuiGrid-zeroMinWidth",
                    }
                  }
                  container={true}
                  spacing={3}
                >
                  <div
                    className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-3"
                  >
                    <WithStyles(ForwardRef(Grid))
                      item={true}
                      sm={6}
                      xs={12}
                    >
                      <ForwardRef(Grid)
                        classes={
                          Object {
                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                            "container": "MuiGrid-container",
                            "direction-xs-column": "MuiGrid-direction-xs-column",
                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                            "grid-lg-1": "MuiGrid-grid-lg-1",
                            "grid-lg-10": "MuiGrid-grid-lg-10",
                            "grid-lg-11": "MuiGrid-grid-lg-11",
                            "grid-lg-12": "MuiGrid-grid-lg-12",
                            "grid-lg-2": "MuiGrid-grid-lg-2",
                            "grid-lg-3": "MuiGrid-grid-lg-3",
                            "grid-lg-4": "MuiGrid-grid-lg-4",
                            "grid-lg-5": "MuiGrid-grid-lg-5",
                            "grid-lg-6": "MuiGrid-grid-lg-6",
                            "grid-lg-7": "MuiGrid-grid-lg-7",
                            "grid-lg-8": "MuiGrid-grid-lg-8",
                            "grid-lg-9": "MuiGrid-grid-lg-9",
                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                            "grid-lg-true": "MuiGrid-grid-lg-true",
                            "grid-md-1": "MuiGrid-grid-md-1",
                            "grid-md-10": "MuiGrid-grid-md-10",
                            "grid-md-11": "MuiGrid-grid-md-11",
                            "grid-md-12": "MuiGrid-grid-md-12",
                            "grid-md-2": "MuiGrid-grid-md-2",
                            "grid-md-3": "MuiGrid-grid-md-3",
                            "grid-md-4": "MuiGrid-grid-md-4",
                            "grid-md-5": "MuiGrid-grid-md-5",
                            "grid-md-6": "MuiGrid-grid-md-6",
                            "grid-md-7": "MuiGrid-grid-md-7",
                            "grid-md-8": "MuiGrid-grid-md-8",
                            "grid-md-9": "MuiGrid-grid-md-9",
                            "grid-md-auto": "MuiGrid-grid-md-auto",
                            "grid-md-true": "MuiGrid-grid-md-true",
                            "grid-sm-1": "MuiGrid-grid-sm-1",
                            "grid-sm-10": "MuiGrid-grid-sm-10",
                            "grid-sm-11": "MuiGrid-grid-sm-11",
                            "grid-sm-12": "MuiGrid-grid-sm-12",
                            "grid-sm-2": "MuiGrid-grid-sm-2",
                            "grid-sm-3": "MuiGrid-grid-sm-3",
                            "grid-sm-4": "MuiGrid-grid-sm-4",
                            "grid-sm-5": "MuiGrid-grid-sm-5",
                            "grid-sm-6": "MuiGrid-grid-sm-6",
                            "grid-sm-7": "MuiGrid-grid-sm-7",
                            "grid-sm-8": "MuiGrid-grid-sm-8",
                            "grid-sm-9": "MuiGrid-grid-sm-9",
                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                            "grid-sm-true": "MuiGrid-grid-sm-true",
                            "grid-xl-1": "MuiGrid-grid-xl-1",
                            "grid-xl-10": "MuiGrid-grid-xl-10",
                            "grid-xl-11": "MuiGrid-grid-xl-11",
                            "grid-xl-12": "MuiGrid-grid-xl-12",
                            "grid-xl-2": "MuiGrid-grid-xl-2",
                            "grid-xl-3": "MuiGrid-grid-xl-3",
                            "grid-xl-4": "MuiGrid-grid-xl-4",
                            "grid-xl-5": "MuiGrid-grid-xl-5",
                            "grid-xl-6": "MuiGrid-grid-xl-6",
                            "grid-xl-7": "MuiGrid-grid-xl-7",
                            "grid-xl-8": "MuiGrid-grid-xl-8",
                            "grid-xl-9": "MuiGrid-grid-xl-9",
                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                            "grid-xl-true": "MuiGrid-grid-xl-true",
                            "grid-xs-1": "MuiGrid-grid-xs-1",
                            "grid-xs-10": "MuiGrid-grid-xs-10",
                            "grid-xs-11": "MuiGrid-grid-xs-11",
                            "grid-xs-12": "MuiGrid-grid-xs-12",
                            "grid-xs-2": "MuiGrid-grid-xs-2",
                            "grid-xs-3": "MuiGrid-grid-xs-3",
                            "grid-xs-4": "MuiGrid-grid-xs-4",
                            "grid-xs-5": "MuiGrid-grid-xs-5",
                            "grid-xs-6": "MuiGrid-grid-xs-6",
                            "grid-xs-7": "MuiGrid-grid-xs-7",
                            "grid-xs-8": "MuiGrid-grid-xs-8",
                            "grid-xs-9": "MuiGrid-grid-xs-9",
                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                            "grid-xs-true": "MuiGrid-grid-xs-true",
                            "item": "MuiGrid-item",
                            "justify-xs-center": "MuiGrid-justify-xs-center",
                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                            "root": "MuiGrid-root",
                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                          }
                        }
                        item={true}
                        sm={6}
                        xs={12}
                      >
                        <div
                          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-6"
                        >
                          <Field
                            autoComplete="given-name"
                            component={[Function]}
                            data-test="firstname-field"
                            fullWidth={true}
                            inputProps={
                              Object {
                                "data-testid": "firstname-field",
                              }
                            }
                            label="forms.aboutYou.firstName"
                            name="firstName"
                            required={true}
                          >
                            <FormikMaterialUITextField
                              autoComplete="given-name"
                              data-test="firstname-field"
                              field={
                                Object {
                                  "name": "firstName",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "value": "",
                                }
                              }
                              form={
                                Object {
                                  "dirty": false,
                                  "errors": Object {},
                                  "getFieldHelpers": [Function],
                                  "getFieldMeta": [Function],
                                  "getFieldProps": [Function],
                                  "handleBlur": [Function],
                                  "handleChange": [Function],
                                  "handleReset": [Function],
                                  "handleSubmit": [Function],
                                  "initialErrors": Object {},
                                  "initialStatus": undefined,
                                  "initialTouched": Object {},
                                  "initialValues": Object {
                                    "checked": false,
                                    "email": "",
                                    "firstName": "",
                                    "lastName": "",
                                    "password": "",
                                    "repeatPassword": "",
                                  },
                                  "isSubmitting": false,
                                  "isValid": true,
                                  "isValidating": false,
                                  "registerField": [Function],
                                  "resetForm": [Function],
                                  "setErrors": [Function],
                                  "setFieldError": [Function],
                                  "setFieldTouched": [Function],
                                  "setFieldValue": [Function],
                                  "setFormikState": [Function],
                                  "setStatus": [Function],
                                  "setSubmitting": [Function],
                                  "setTouched": [Function],
                                  "setValues": [Function],
                                  "status": undefined,
                                  "submitCount": 0,
                                  "submitForm": [Function],
                                  "touched": Object {},
                                  "unregisterField": [Function],
                                  "validateField": [Function],
                                  "validateForm": [Function],
                                  "validateOnBlur": true,
                                  "validateOnChange": true,
                                  "validateOnMount": false,
                                  "values": Object {
                                    "checked": false,
                                    "email": "",
                                    "firstName": "",
                                    "lastName": "",
                                    "password": "",
                                    "repeatPassword": "",
                                  },
                                }
                              }
                              fullWidth={true}
                              inputProps={
                                Object {
                                  "data-testid": "firstname-field",
                                }
                              }
                              label="forms.aboutYou.firstName"
                              required={true}
                            >
                              <WithStyles(ForwardRef(TextField))
                                autoComplete="given-name"
                                data-test="firstname-field"
                                disabled={false}
                                fullWidth={true}
                                inputProps={
                                  Object {
                                    "data-testid": "firstname-field",
                                  }
                                }
                                label="forms.aboutYou.firstName"
                                name="firstName"
                                onBlur={[Function]}
                                onChange={[Function]}
                                required={true}
                                value=""
                              >
                                <ForwardRef(TextField)
                                  autoComplete="given-name"
                                  classes={
                                    Object {
                                      "root": "MuiTextField-root",
                                    }
                                  }
                                  data-test="firstname-field"
                                  disabled={false}
                                  fullWidth={true}
                                  inputProps={
                                    Object {
                                      "data-testid": "firstname-field",
                                    }
                                  }
                                  label="forms.aboutYou.firstName"
                                  name="firstName"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  required={true}
                                  value=""
                                >
                                  <WithStyles(ForwardRef(FormControl))
                                    className="MuiTextField-root"
                                    color="primary"
                                    data-test="firstname-field"
                                    disabled={false}
                                    error={false}
                                    fullWidth={true}
                                    required={true}
                                    variant="standard"
                                  >
                                    <ForwardRef(FormControl)
                                      className="MuiTextField-root"
                                      classes={
                                        Object {
                                          "fullWidth": "MuiFormControl-fullWidth",
                                          "marginDense": "MuiFormControl-marginDense",
                                          "marginNormal": "MuiFormControl-marginNormal",
                                          "root": "MuiFormControl-root",
                                        }
                                      }
                                      color="primary"
                                      data-test="firstname-field"
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      required={true}
                                      variant="standard"
                                    >
                                      <div
                                        className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                        data-test="firstname-field"
                                      >
                                        <WithStyles(ForwardRef(InputLabel))>
                                          <ForwardRef(InputLabel)
                                            classes={
                                              Object {
                                                "animated": "MuiInputLabel-animated",
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "filled": "MuiInputLabel-filled",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInputLabel-formControl",
                                                "marginDense": "MuiInputLabel-marginDense",
                                                "outlined": "MuiInputLabel-outlined",
                                                "required": "Mui-required",
                                                "root": "MuiInputLabel-root",
                                                "shrink": "MuiInputLabel-shrink",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(FormLabel))
                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                              classes={
                                                Object {
                                                  "asterisk": "MuiInputLabel-asterisk",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "required": "Mui-required",
                                                }
                                              }
                                              data-shrink={false}
                                            >
                                              <ForwardRef(FormLabel)
                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "filled": "MuiFormLabel-filled",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "required": "Mui-required Mui-required",
                                                    "root": "MuiFormLabel-root",
                                                  }
                                                }
                                                data-shrink={false}
                                              >
                                                <label
                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated Mui-required Mui-required"
                                                  data-shrink={false}
                                                >
                                                  forms.aboutYou.firstName
                                                  <span
                                                    aria-hidden={true}
                                                    className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                  >
                                                     
                                                    *
                                                  </span>
                                                </label>
                                              </ForwardRef(FormLabel)>
                                            </WithStyles(ForwardRef(FormLabel))>
                                          </ForwardRef(InputLabel)>
                                        </WithStyles(ForwardRef(InputLabel))>
                                        <WithStyles(ForwardRef(Input))
                                          autoComplete="given-name"
                                          autoFocus={false}
                                          fullWidth={true}
                                          inputProps={
                                            Object {
                                              "data-testid": "firstname-field",
                                            }
                                          }
                                          multiline={false}
                                          name="firstName"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          value=""
                                        >
                                          <ForwardRef(Input)
                                            autoComplete="given-name"
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "colorSecondary": "MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInput-formControl",
                                                "fullWidth": "MuiInput-fullWidth",
                                                "input": "MuiInput-input",
                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInput-marginDense",
                                                "multiline": "MuiInput-multiline",
                                                "root": "MuiInput-root",
                                                "underline": "MuiInput-underline",
                                              }
                                            }
                                            fullWidth={true}
                                            inputProps={
                                              Object {
                                                "data-testid": "firstname-field",
                                              }
                                            }
                                            multiline={false}
                                            name="firstName"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            value=""
                                          >
                                            <WithStyles(ForwardRef(InputBase))
                                              autoComplete="given-name"
                                              autoFocus={false}
                                              classes={
                                                Object {
                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "formControl": "MuiInput-formControl",
                                                  "fullWidth": "MuiInput-fullWidth",
                                                  "input": "MuiInput-input",
                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInput-marginDense",
                                                  "multiline": "MuiInput-multiline",
                                                  "root": "MuiInput-root MuiInput-underline",
                                                  "underline": null,
                                                }
                                              }
                                              fullWidth={true}
                                              inputComponent="input"
                                              inputProps={
                                                Object {
                                                  "data-testid": "firstname-field",
                                                }
                                              }
                                              multiline={false}
                                              name="firstName"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            >
                                              <ForwardRef(InputBase)
                                                autoComplete="given-name"
                                                autoFocus={false}
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                                    "adornedStart": "MuiInputBase-adornedStart",
                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                    "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                    "input": "MuiInputBase-input MuiInput-input",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                    "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                    "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                    "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                  }
                                                }
                                                fullWidth={true}
                                                inputComponent="input"
                                                inputProps={
                                                  Object {
                                                    "data-testid": "firstname-field",
                                                  }
                                                }
                                                multiline={false}
                                                name="firstName"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <div
                                                  className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                                                  onClick={[Function]}
                                                >
                                                  <input
                                                    aria-invalid={false}
                                                    autoComplete="given-name"
                                                    autoFocus={false}
                                                    className="MuiInputBase-input MuiInput-input"
                                                    data-testid="firstname-field"
                                                    disabled={false}
                                                    name="firstName"
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    required={true}
                                                    type="text"
                                                    value=""
                                                  />
                                                </div>
                                              </ForwardRef(InputBase)>
                                            </WithStyles(ForwardRef(InputBase))>
                                          </ForwardRef(Input)>
                                        </WithStyles(ForwardRef(Input))>
                                      </div>
                                    </ForwardRef(FormControl)>
                                  </WithStyles(ForwardRef(FormControl))>
                                </ForwardRef(TextField)>
                              </WithStyles(ForwardRef(TextField))>
                            </FormikMaterialUITextField>
                          </Field>
                        </div>
                      </ForwardRef(Grid)>
                    </WithStyles(ForwardRef(Grid))>
                    <WithStyles(ForwardRef(Grid))
                      item={true}
                      sm={6}
                      xs={12}
                    >
                      <ForwardRef(Grid)
                        classes={
                          Object {
                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                            "container": "MuiGrid-container",
                            "direction-xs-column": "MuiGrid-direction-xs-column",
                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                            "grid-lg-1": "MuiGrid-grid-lg-1",
                            "grid-lg-10": "MuiGrid-grid-lg-10",
                            "grid-lg-11": "MuiGrid-grid-lg-11",
                            "grid-lg-12": "MuiGrid-grid-lg-12",
                            "grid-lg-2": "MuiGrid-grid-lg-2",
                            "grid-lg-3": "MuiGrid-grid-lg-3",
                            "grid-lg-4": "MuiGrid-grid-lg-4",
                            "grid-lg-5": "MuiGrid-grid-lg-5",
                            "grid-lg-6": "MuiGrid-grid-lg-6",
                            "grid-lg-7": "MuiGrid-grid-lg-7",
                            "grid-lg-8": "MuiGrid-grid-lg-8",
                            "grid-lg-9": "MuiGrid-grid-lg-9",
                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                            "grid-lg-true": "MuiGrid-grid-lg-true",
                            "grid-md-1": "MuiGrid-grid-md-1",
                            "grid-md-10": "MuiGrid-grid-md-10",
                            "grid-md-11": "MuiGrid-grid-md-11",
                            "grid-md-12": "MuiGrid-grid-md-12",
                            "grid-md-2": "MuiGrid-grid-md-2",
                            "grid-md-3": "MuiGrid-grid-md-3",
                            "grid-md-4": "MuiGrid-grid-md-4",
                            "grid-md-5": "MuiGrid-grid-md-5",
                            "grid-md-6": "MuiGrid-grid-md-6",
                            "grid-md-7": "MuiGrid-grid-md-7",
                            "grid-md-8": "MuiGrid-grid-md-8",
                            "grid-md-9": "MuiGrid-grid-md-9",
                            "grid-md-auto": "MuiGrid-grid-md-auto",
                            "grid-md-true": "MuiGrid-grid-md-true",
                            "grid-sm-1": "MuiGrid-grid-sm-1",
                            "grid-sm-10": "MuiGrid-grid-sm-10",
                            "grid-sm-11": "MuiGrid-grid-sm-11",
                            "grid-sm-12": "MuiGrid-grid-sm-12",
                            "grid-sm-2": "MuiGrid-grid-sm-2",
                            "grid-sm-3": "MuiGrid-grid-sm-3",
                            "grid-sm-4": "MuiGrid-grid-sm-4",
                            "grid-sm-5": "MuiGrid-grid-sm-5",
                            "grid-sm-6": "MuiGrid-grid-sm-6",
                            "grid-sm-7": "MuiGrid-grid-sm-7",
                            "grid-sm-8": "MuiGrid-grid-sm-8",
                            "grid-sm-9": "MuiGrid-grid-sm-9",
                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                            "grid-sm-true": "MuiGrid-grid-sm-true",
                            "grid-xl-1": "MuiGrid-grid-xl-1",
                            "grid-xl-10": "MuiGrid-grid-xl-10",
                            "grid-xl-11": "MuiGrid-grid-xl-11",
                            "grid-xl-12": "MuiGrid-grid-xl-12",
                            "grid-xl-2": "MuiGrid-grid-xl-2",
                            "grid-xl-3": "MuiGrid-grid-xl-3",
                            "grid-xl-4": "MuiGrid-grid-xl-4",
                            "grid-xl-5": "MuiGrid-grid-xl-5",
                            "grid-xl-6": "MuiGrid-grid-xl-6",
                            "grid-xl-7": "MuiGrid-grid-xl-7",
                            "grid-xl-8": "MuiGrid-grid-xl-8",
                            "grid-xl-9": "MuiGrid-grid-xl-9",
                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                            "grid-xl-true": "MuiGrid-grid-xl-true",
                            "grid-xs-1": "MuiGrid-grid-xs-1",
                            "grid-xs-10": "MuiGrid-grid-xs-10",
                            "grid-xs-11": "MuiGrid-grid-xs-11",
                            "grid-xs-12": "MuiGrid-grid-xs-12",
                            "grid-xs-2": "MuiGrid-grid-xs-2",
                            "grid-xs-3": "MuiGrid-grid-xs-3",
                            "grid-xs-4": "MuiGrid-grid-xs-4",
                            "grid-xs-5": "MuiGrid-grid-xs-5",
                            "grid-xs-6": "MuiGrid-grid-xs-6",
                            "grid-xs-7": "MuiGrid-grid-xs-7",
                            "grid-xs-8": "MuiGrid-grid-xs-8",
                            "grid-xs-9": "MuiGrid-grid-xs-9",
                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                            "grid-xs-true": "MuiGrid-grid-xs-true",
                            "item": "MuiGrid-item",
                            "justify-xs-center": "MuiGrid-justify-xs-center",
                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                            "root": "MuiGrid-root",
                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                          }
                        }
                        item={true}
                        sm={6}
                        xs={12}
                      >
                        <div
                          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-6"
                        >
                          <Field
                            autoComplete="family-name"
                            component={[Function]}
                            data-test="lastname-field"
                            fullWidth={true}
                            id="lastName"
                            inputProps={
                              Object {
                                "data-testid": "lastname-field",
                              }
                            }
                            label="forms.aboutYou.lastName"
                            name="lastName"
                          >
                            <FormikMaterialUITextField
                              autoComplete="family-name"
                              data-test="lastname-field"
                              field={
                                Object {
                                  "name": "lastName",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "value": "",
                                }
                              }
                              form={
                                Object {
                                  "dirty": false,
                                  "errors": Object {},
                                  "getFieldHelpers": [Function],
                                  "getFieldMeta": [Function],
                                  "getFieldProps": [Function],
                                  "handleBlur": [Function],
                                  "handleChange": [Function],
                                  "handleReset": [Function],
                                  "handleSubmit": [Function],
                                  "initialErrors": Object {},
                                  "initialStatus": undefined,
                                  "initialTouched": Object {},
                                  "initialValues": Object {
                                    "checked": false,
                                    "email": "",
                                    "firstName": "",
                                    "lastName": "",
                                    "password": "",
                                    "repeatPassword": "",
                                  },
                                  "isSubmitting": false,
                                  "isValid": true,
                                  "isValidating": false,
                                  "registerField": [Function],
                                  "resetForm": [Function],
                                  "setErrors": [Function],
                                  "setFieldError": [Function],
                                  "setFieldTouched": [Function],
                                  "setFieldValue": [Function],
                                  "setFormikState": [Function],
                                  "setStatus": [Function],
                                  "setSubmitting": [Function],
                                  "setTouched": [Function],
                                  "setValues": [Function],
                                  "status": undefined,
                                  "submitCount": 0,
                                  "submitForm": [Function],
                                  "touched": Object {},
                                  "unregisterField": [Function],
                                  "validateField": [Function],
                                  "validateForm": [Function],
                                  "validateOnBlur": true,
                                  "validateOnChange": true,
                                  "validateOnMount": false,
                                  "values": Object {
                                    "checked": false,
                                    "email": "",
                                    "firstName": "",
                                    "lastName": "",
                                    "password": "",
                                    "repeatPassword": "",
                                  },
                                }
                              }
                              fullWidth={true}
                              id="lastName"
                              inputProps={
                                Object {
                                  "data-testid": "lastname-field",
                                }
                              }
                              label="forms.aboutYou.lastName"
                            >
                              <WithStyles(ForwardRef(TextField))
                                autoComplete="family-name"
                                data-test="lastname-field"
                                disabled={false}
                                fullWidth={true}
                                id="lastName"
                                inputProps={
                                  Object {
                                    "data-testid": "lastname-field",
                                  }
                                }
                                label="forms.aboutYou.lastName"
                                name="lastName"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <ForwardRef(TextField)
                                  autoComplete="family-name"
                                  classes={
                                    Object {
                                      "root": "MuiTextField-root",
                                    }
                                  }
                                  data-test="lastname-field"
                                  disabled={false}
                                  fullWidth={true}
                                  id="lastName"
                                  inputProps={
                                    Object {
                                      "data-testid": "lastname-field",
                                    }
                                  }
                                  label="forms.aboutYou.lastName"
                                  name="lastName"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                >
                                  <WithStyles(ForwardRef(FormControl))
                                    className="MuiTextField-root"
                                    color="primary"
                                    data-test="lastname-field"
                                    disabled={false}
                                    error={false}
                                    fullWidth={true}
                                    required={false}
                                    variant="standard"
                                  >
                                    <ForwardRef(FormControl)
                                      className="MuiTextField-root"
                                      classes={
                                        Object {
                                          "fullWidth": "MuiFormControl-fullWidth",
                                          "marginDense": "MuiFormControl-marginDense",
                                          "marginNormal": "MuiFormControl-marginNormal",
                                          "root": "MuiFormControl-root",
                                        }
                                      }
                                      color="primary"
                                      data-test="lastname-field"
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      required={false}
                                      variant="standard"
                                    >
                                      <div
                                        className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                        data-test="lastname-field"
                                      >
                                        <WithStyles(ForwardRef(InputLabel))
                                          htmlFor="lastName"
                                          id="lastName-label"
                                        >
                                          <ForwardRef(InputLabel)
                                            classes={
                                              Object {
                                                "animated": "MuiInputLabel-animated",
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "filled": "MuiInputLabel-filled",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInputLabel-formControl",
                                                "marginDense": "MuiInputLabel-marginDense",
                                                "outlined": "MuiInputLabel-outlined",
                                                "required": "Mui-required",
                                                "root": "MuiInputLabel-root",
                                                "shrink": "MuiInputLabel-shrink",
                                              }
                                            }
                                            htmlFor="lastName"
                                            id="lastName-label"
                                          >
                                            <WithStyles(ForwardRef(FormLabel))
                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                              classes={
                                                Object {
                                                  "asterisk": "MuiInputLabel-asterisk",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "required": "Mui-required",
                                                }
                                              }
                                              data-shrink={false}
                                              htmlFor="lastName"
                                              id="lastName-label"
                                            >
                                              <ForwardRef(FormLabel)
                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "filled": "MuiFormLabel-filled",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "required": "Mui-required Mui-required",
                                                    "root": "MuiFormLabel-root",
                                                  }
                                                }
                                                data-shrink={false}
                                                htmlFor="lastName"
                                                id="lastName-label"
                                              >
                                                <label
                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                  data-shrink={false}
                                                  htmlFor="lastName"
                                                  id="lastName-label"
                                                >
                                                  forms.aboutYou.lastName
                                                </label>
                                              </ForwardRef(FormLabel)>
                                            </WithStyles(ForwardRef(FormLabel))>
                                          </ForwardRef(InputLabel)>
                                        </WithStyles(ForwardRef(InputLabel))>
                                        <WithStyles(ForwardRef(Input))
                                          autoComplete="family-name"
                                          autoFocus={false}
                                          fullWidth={true}
                                          id="lastName"
                                          inputProps={
                                            Object {
                                              "data-testid": "lastname-field",
                                            }
                                          }
                                          multiline={false}
                                          name="lastName"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          value=""
                                        >
                                          <ForwardRef(Input)
                                            autoComplete="family-name"
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "colorSecondary": "MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInput-formControl",
                                                "fullWidth": "MuiInput-fullWidth",
                                                "input": "MuiInput-input",
                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInput-marginDense",
                                                "multiline": "MuiInput-multiline",
                                                "root": "MuiInput-root",
                                                "underline": "MuiInput-underline",
                                              }
                                            }
                                            fullWidth={true}
                                            id="lastName"
                                            inputProps={
                                              Object {
                                                "data-testid": "lastname-field",
                                              }
                                            }
                                            multiline={false}
                                            name="lastName"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            value=""
                                          >
                                            <WithStyles(ForwardRef(InputBase))
                                              autoComplete="family-name"
                                              autoFocus={false}
                                              classes={
                                                Object {
                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "formControl": "MuiInput-formControl",
                                                  "fullWidth": "MuiInput-fullWidth",
                                                  "input": "MuiInput-input",
                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInput-marginDense",
                                                  "multiline": "MuiInput-multiline",
                                                  "root": "MuiInput-root MuiInput-underline",
                                                  "underline": null,
                                                }
                                              }
                                              fullWidth={true}
                                              id="lastName"
                                              inputComponent="input"
                                              inputProps={
                                                Object {
                                                  "data-testid": "lastname-field",
                                                }
                                              }
                                              multiline={false}
                                              name="lastName"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            >
                                              <ForwardRef(InputBase)
                                                autoComplete="family-name"
                                                autoFocus={false}
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                                    "adornedStart": "MuiInputBase-adornedStart",
                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                    "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                    "input": "MuiInputBase-input MuiInput-input",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                    "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                    "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                    "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                  }
                                                }
                                                fullWidth={true}
                                                id="lastName"
                                                inputComponent="input"
                                                inputProps={
                                                  Object {
                                                    "data-testid": "lastname-field",
                                                  }
                                                }
                                                multiline={false}
                                                name="lastName"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <div
                                                  className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                                                  onClick={[Function]}
                                                >
                                                  <input
                                                    aria-invalid={false}
                                                    autoComplete="family-name"
                                                    autoFocus={false}
                                                    className="MuiInputBase-input MuiInput-input"
                                                    data-testid="lastname-field"
                                                    disabled={false}
                                                    id="lastName"
                                                    name="lastName"
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    required={false}
                                                    type="text"
                                                    value=""
                                                  />
                                                </div>
                                              </ForwardRef(InputBase)>
                                            </WithStyles(ForwardRef(InputBase))>
                                          </ForwardRef(Input)>
                                        </WithStyles(ForwardRef(Input))>
                                      </div>
                                    </ForwardRef(FormControl)>
                                  </WithStyles(ForwardRef(FormControl))>
                                </ForwardRef(TextField)>
                              </WithStyles(ForwardRef(TextField))>
                            </FormikMaterialUITextField>
                          </Field>
                        </div>
                      </ForwardRef(Grid)>
                    </WithStyles(ForwardRef(Grid))>
                    <WithStyles(ForwardRef(Grid))
                      item={true}
                      xs={12}
                    >
                      <ForwardRef(Grid)
                        classes={
                          Object {
                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                            "container": "MuiGrid-container",
                            "direction-xs-column": "MuiGrid-direction-xs-column",
                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                            "grid-lg-1": "MuiGrid-grid-lg-1",
                            "grid-lg-10": "MuiGrid-grid-lg-10",
                            "grid-lg-11": "MuiGrid-grid-lg-11",
                            "grid-lg-12": "MuiGrid-grid-lg-12",
                            "grid-lg-2": "MuiGrid-grid-lg-2",
                            "grid-lg-3": "MuiGrid-grid-lg-3",
                            "grid-lg-4": "MuiGrid-grid-lg-4",
                            "grid-lg-5": "MuiGrid-grid-lg-5",
                            "grid-lg-6": "MuiGrid-grid-lg-6",
                            "grid-lg-7": "MuiGrid-grid-lg-7",
                            "grid-lg-8": "MuiGrid-grid-lg-8",
                            "grid-lg-9": "MuiGrid-grid-lg-9",
                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                            "grid-lg-true": "MuiGrid-grid-lg-true",
                            "grid-md-1": "MuiGrid-grid-md-1",
                            "grid-md-10": "MuiGrid-grid-md-10",
                            "grid-md-11": "MuiGrid-grid-md-11",
                            "grid-md-12": "MuiGrid-grid-md-12",
                            "grid-md-2": "MuiGrid-grid-md-2",
                            "grid-md-3": "MuiGrid-grid-md-3",
                            "grid-md-4": "MuiGrid-grid-md-4",
                            "grid-md-5": "MuiGrid-grid-md-5",
                            "grid-md-6": "MuiGrid-grid-md-6",
                            "grid-md-7": "MuiGrid-grid-md-7",
                            "grid-md-8": "MuiGrid-grid-md-8",
                            "grid-md-9": "MuiGrid-grid-md-9",
                            "grid-md-auto": "MuiGrid-grid-md-auto",
                            "grid-md-true": "MuiGrid-grid-md-true",
                            "grid-sm-1": "MuiGrid-grid-sm-1",
                            "grid-sm-10": "MuiGrid-grid-sm-10",
                            "grid-sm-11": "MuiGrid-grid-sm-11",
                            "grid-sm-12": "MuiGrid-grid-sm-12",
                            "grid-sm-2": "MuiGrid-grid-sm-2",
                            "grid-sm-3": "MuiGrid-grid-sm-3",
                            "grid-sm-4": "MuiGrid-grid-sm-4",
                            "grid-sm-5": "MuiGrid-grid-sm-5",
                            "grid-sm-6": "MuiGrid-grid-sm-6",
                            "grid-sm-7": "MuiGrid-grid-sm-7",
                            "grid-sm-8": "MuiGrid-grid-sm-8",
                            "grid-sm-9": "MuiGrid-grid-sm-9",
                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                            "grid-sm-true": "MuiGrid-grid-sm-true",
                            "grid-xl-1": "MuiGrid-grid-xl-1",
                            "grid-xl-10": "MuiGrid-grid-xl-10",
                            "grid-xl-11": "MuiGrid-grid-xl-11",
                            "grid-xl-12": "MuiGrid-grid-xl-12",
                            "grid-xl-2": "MuiGrid-grid-xl-2",
                            "grid-xl-3": "MuiGrid-grid-xl-3",
                            "grid-xl-4": "MuiGrid-grid-xl-4",
                            "grid-xl-5": "MuiGrid-grid-xl-5",
                            "grid-xl-6": "MuiGrid-grid-xl-6",
                            "grid-xl-7": "MuiGrid-grid-xl-7",
                            "grid-xl-8": "MuiGrid-grid-xl-8",
                            "grid-xl-9": "MuiGrid-grid-xl-9",
                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                            "grid-xl-true": "MuiGrid-grid-xl-true",
                            "grid-xs-1": "MuiGrid-grid-xs-1",
                            "grid-xs-10": "MuiGrid-grid-xs-10",
                            "grid-xs-11": "MuiGrid-grid-xs-11",
                            "grid-xs-12": "MuiGrid-grid-xs-12",
                            "grid-xs-2": "MuiGrid-grid-xs-2",
                            "grid-xs-3": "MuiGrid-grid-xs-3",
                            "grid-xs-4": "MuiGrid-grid-xs-4",
                            "grid-xs-5": "MuiGrid-grid-xs-5",
                            "grid-xs-6": "MuiGrid-grid-xs-6",
                            "grid-xs-7": "MuiGrid-grid-xs-7",
                            "grid-xs-8": "MuiGrid-grid-xs-8",
                            "grid-xs-9": "MuiGrid-grid-xs-9",
                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                            "grid-xs-true": "MuiGrid-grid-xs-true",
                            "item": "MuiGrid-item",
                            "justify-xs-center": "MuiGrid-justify-xs-center",
                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                            "root": "MuiGrid-root",
                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                          }
                        }
                        item={true}
                        xs={12}
                      >
                        <div
                          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                        >
                          <Field
                            autoComplete="email"
                            component={[Function]}
                            data-test="email-field"
                            fullWidth={true}
                            id="email"
                            inputProps={
                              Object {
                                "data-testid": "email-field",
                              }
                            }
                            label="forms.aboutYou.email"
                            name="email"
                            required={true}
                          >
                            <FormikMaterialUITextField
                              autoComplete="email"
                              data-test="email-field"
                              field={
                                Object {
                                  "name": "email",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "value": "",
                                }
                              }
                              form={
                                Object {
                                  "dirty": false,
                                  "errors": Object {},
                                  "getFieldHelpers": [Function],
                                  "getFieldMeta": [Function],
                                  "getFieldProps": [Function],
                                  "handleBlur": [Function],
                                  "handleChange": [Function],
                                  "handleReset": [Function],
                                  "handleSubmit": [Function],
                                  "initialErrors": Object {},
                                  "initialStatus": undefined,
                                  "initialTouched": Object {},
                                  "initialValues": Object {
                                    "checked": false,
                                    "email": "",
                                    "firstName": "",
                                    "lastName": "",
                                    "password": "",
                                    "repeatPassword": "",
                                  },
                                  "isSubmitting": false,
                                  "isValid": true,
                                  "isValidating": false,
                                  "registerField": [Function],
                                  "resetForm": [Function],
                                  "setErrors": [Function],
                                  "setFieldError": [Function],
                                  "setFieldTouched": [Function],
                                  "setFieldValue": [Function],
                                  "setFormikState": [Function],
                                  "setStatus": [Function],
                                  "setSubmitting": [Function],
                                  "setTouched": [Function],
                                  "setValues": [Function],
                                  "status": undefined,
                                  "submitCount": 0,
                                  "submitForm": [Function],
                                  "touched": Object {},
                                  "unregisterField": [Function],
                                  "validateField": [Function],
                                  "validateForm": [Function],
                                  "validateOnBlur": true,
                                  "validateOnChange": true,
                                  "validateOnMount": false,
                                  "values": Object {
                                    "checked": false,
                                    "email": "",
                                    "firstName": "",
                                    "lastName": "",
                                    "password": "",
                                    "repeatPassword": "",
                                  },
                                }
                              }
                              fullWidth={true}
                              id="email"
                              inputProps={
                                Object {
                                  "data-testid": "email-field",
                                }
                              }
                              label="forms.aboutYou.email"
                              required={true}
                            >
                              <WithStyles(ForwardRef(TextField))
                                autoComplete="email"
                                data-test="email-field"
                                disabled={false}
                                fullWidth={true}
                                id="email"
                                inputProps={
                                  Object {
                                    "data-testid": "email-field",
                                  }
                                }
                                label="forms.aboutYou.email"
                                name="email"
                                onBlur={[Function]}
                                onChange={[Function]}
                                required={true}
                                value=""
                              >
                                <ForwardRef(TextField)
                                  autoComplete="email"
                                  classes={
                                    Object {
                                      "root": "MuiTextField-root",
                                    }
                                  }
                                  data-test="email-field"
                                  disabled={false}
                                  fullWidth={true}
                                  id="email"
                                  inputProps={
                                    Object {
                                      "data-testid": "email-field",
                                    }
                                  }
                                  label="forms.aboutYou.email"
                                  name="email"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  required={true}
                                  value=""
                                >
                                  <WithStyles(ForwardRef(FormControl))
                                    className="MuiTextField-root"
                                    color="primary"
                                    data-test="email-field"
                                    disabled={false}
                                    error={false}
                                    fullWidth={true}
                                    required={true}
                                    variant="standard"
                                  >
                                    <ForwardRef(FormControl)
                                      className="MuiTextField-root"
                                      classes={
                                        Object {
                                          "fullWidth": "MuiFormControl-fullWidth",
                                          "marginDense": "MuiFormControl-marginDense",
                                          "marginNormal": "MuiFormControl-marginNormal",
                                          "root": "MuiFormControl-root",
                                        }
                                      }
                                      color="primary"
                                      data-test="email-field"
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      required={true}
                                      variant="standard"
                                    >
                                      <div
                                        className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                        data-test="email-field"
                                      >
                                        <WithStyles(ForwardRef(InputLabel))
                                          htmlFor="email"
                                          id="email-label"
                                        >
                                          <ForwardRef(InputLabel)
                                            classes={
                                              Object {
                                                "animated": "MuiInputLabel-animated",
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "filled": "MuiInputLabel-filled",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInputLabel-formControl",
                                                "marginDense": "MuiInputLabel-marginDense",
                                                "outlined": "MuiInputLabel-outlined",
                                                "required": "Mui-required",
                                                "root": "MuiInputLabel-root",
                                                "shrink": "MuiInputLabel-shrink",
                                              }
                                            }
                                            htmlFor="email"
                                            id="email-label"
                                          >
                                            <WithStyles(ForwardRef(FormLabel))
                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                              classes={
                                                Object {
                                                  "asterisk": "MuiInputLabel-asterisk",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "required": "Mui-required",
                                                }
                                              }
                                              data-shrink={false}
                                              htmlFor="email"
                                              id="email-label"
                                            >
                                              <ForwardRef(FormLabel)
                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "filled": "MuiFormLabel-filled",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "required": "Mui-required Mui-required",
                                                    "root": "MuiFormLabel-root",
                                                  }
                                                }
                                                data-shrink={false}
                                                htmlFor="email"
                                                id="email-label"
                                              >
                                                <label
                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated Mui-required Mui-required"
                                                  data-shrink={false}
                                                  htmlFor="email"
                                                  id="email-label"
                                                >
                                                  forms.aboutYou.email
                                                  <span
                                                    aria-hidden={true}
                                                    className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                  >
                                                     
                                                    *
                                                  </span>
                                                </label>
                                              </ForwardRef(FormLabel)>
                                            </WithStyles(ForwardRef(FormLabel))>
                                          </ForwardRef(InputLabel)>
                                        </WithStyles(ForwardRef(InputLabel))>
                                        <WithStyles(ForwardRef(Input))
                                          autoComplete="email"
                                          autoFocus={false}
                                          fullWidth={true}
                                          id="email"
                                          inputProps={
                                            Object {
                                              "data-testid": "email-field",
                                            }
                                          }
                                          multiline={false}
                                          name="email"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          value=""
                                        >
                                          <ForwardRef(Input)
                                            autoComplete="email"
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "colorSecondary": "MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInput-formControl",
                                                "fullWidth": "MuiInput-fullWidth",
                                                "input": "MuiInput-input",
                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInput-marginDense",
                                                "multiline": "MuiInput-multiline",
                                                "root": "MuiInput-root",
                                                "underline": "MuiInput-underline",
                                              }
                                            }
                                            fullWidth={true}
                                            id="email"
                                            inputProps={
                                              Object {
                                                "data-testid": "email-field",
                                              }
                                            }
                                            multiline={false}
                                            name="email"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            value=""
                                          >
                                            <WithStyles(ForwardRef(InputBase))
                                              autoComplete="email"
                                              autoFocus={false}
                                              classes={
                                                Object {
                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "formControl": "MuiInput-formControl",
                                                  "fullWidth": "MuiInput-fullWidth",
                                                  "input": "MuiInput-input",
                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInput-marginDense",
                                                  "multiline": "MuiInput-multiline",
                                                  "root": "MuiInput-root MuiInput-underline",
                                                  "underline": null,
                                                }
                                              }
                                              fullWidth={true}
                                              id="email"
                                              inputComponent="input"
                                              inputProps={
                                                Object {
                                                  "data-testid": "email-field",
                                                }
                                              }
                                              multiline={false}
                                              name="email"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            >
                                              <ForwardRef(InputBase)
                                                autoComplete="email"
                                                autoFocus={false}
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                                    "adornedStart": "MuiInputBase-adornedStart",
                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                    "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                    "input": "MuiInputBase-input MuiInput-input",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                    "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                    "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                    "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                  }
                                                }
                                                fullWidth={true}
                                                id="email"
                                                inputComponent="input"
                                                inputProps={
                                                  Object {
                                                    "data-testid": "email-field",
                                                  }
                                                }
                                                multiline={false}
                                                name="email"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <div
                                                  className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                                                  onClick={[Function]}
                                                >
                                                  <input
                                                    aria-invalid={false}
                                                    autoComplete="email"
                                                    autoFocus={false}
                                                    className="MuiInputBase-input MuiInput-input"
                                                    data-testid="email-field"
                                                    disabled={false}
                                                    id="email"
                                                    name="email"
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    required={true}
                                                    type="text"
                                                    value=""
                                                  />
                                                </div>
                                              </ForwardRef(InputBase)>
                                            </WithStyles(ForwardRef(InputBase))>
                                          </ForwardRef(Input)>
                                        </WithStyles(ForwardRef(Input))>
                                      </div>
                                    </ForwardRef(FormControl)>
                                  </WithStyles(ForwardRef(FormControl))>
                                </ForwardRef(TextField)>
                              </WithStyles(ForwardRef(TextField))>
                            </FormikMaterialUITextField>
                          </Field>
                        </div>
                      </ForwardRef(Grid)>
                    </WithStyles(ForwardRef(Grid))>
                    <WithStyles(ForwardRef(Grid))
                      item={true}
                      sm={12}
                      xs={12}
                    >
                      <ForwardRef(Grid)
                        classes={
                          Object {
                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                            "container": "MuiGrid-container",
                            "direction-xs-column": "MuiGrid-direction-xs-column",
                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                            "grid-lg-1": "MuiGrid-grid-lg-1",
                            "grid-lg-10": "MuiGrid-grid-lg-10",
                            "grid-lg-11": "MuiGrid-grid-lg-11",
                            "grid-lg-12": "MuiGrid-grid-lg-12",
                            "grid-lg-2": "MuiGrid-grid-lg-2",
                            "grid-lg-3": "MuiGrid-grid-lg-3",
                            "grid-lg-4": "MuiGrid-grid-lg-4",
                            "grid-lg-5": "MuiGrid-grid-lg-5",
                            "grid-lg-6": "MuiGrid-grid-lg-6",
                            "grid-lg-7": "MuiGrid-grid-lg-7",
                            "grid-lg-8": "MuiGrid-grid-lg-8",
                            "grid-lg-9": "MuiGrid-grid-lg-9",
                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                            "grid-lg-true": "MuiGrid-grid-lg-true",
                            "grid-md-1": "MuiGrid-grid-md-1",
                            "grid-md-10": "MuiGrid-grid-md-10",
                            "grid-md-11": "MuiGrid-grid-md-11",
                            "grid-md-12": "MuiGrid-grid-md-12",
                            "grid-md-2": "MuiGrid-grid-md-2",
                            "grid-md-3": "MuiGrid-grid-md-3",
                            "grid-md-4": "MuiGrid-grid-md-4",
                            "grid-md-5": "MuiGrid-grid-md-5",
                            "grid-md-6": "MuiGrid-grid-md-6",
                            "grid-md-7": "MuiGrid-grid-md-7",
                            "grid-md-8": "MuiGrid-grid-md-8",
                            "grid-md-9": "MuiGrid-grid-md-9",
                            "grid-md-auto": "MuiGrid-grid-md-auto",
                            "grid-md-true": "MuiGrid-grid-md-true",
                            "grid-sm-1": "MuiGrid-grid-sm-1",
                            "grid-sm-10": "MuiGrid-grid-sm-10",
                            "grid-sm-11": "MuiGrid-grid-sm-11",
                            "grid-sm-12": "MuiGrid-grid-sm-12",
                            "grid-sm-2": "MuiGrid-grid-sm-2",
                            "grid-sm-3": "MuiGrid-grid-sm-3",
                            "grid-sm-4": "MuiGrid-grid-sm-4",
                            "grid-sm-5": "MuiGrid-grid-sm-5",
                            "grid-sm-6": "MuiGrid-grid-sm-6",
                            "grid-sm-7": "MuiGrid-grid-sm-7",
                            "grid-sm-8": "MuiGrid-grid-sm-8",
                            "grid-sm-9": "MuiGrid-grid-sm-9",
                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                            "grid-sm-true": "MuiGrid-grid-sm-true",
                            "grid-xl-1": "MuiGrid-grid-xl-1",
                            "grid-xl-10": "MuiGrid-grid-xl-10",
                            "grid-xl-11": "MuiGrid-grid-xl-11",
                            "grid-xl-12": "MuiGrid-grid-xl-12",
                            "grid-xl-2": "MuiGrid-grid-xl-2",
                            "grid-xl-3": "MuiGrid-grid-xl-3",
                            "grid-xl-4": "MuiGrid-grid-xl-4",
                            "grid-xl-5": "MuiGrid-grid-xl-5",
                            "grid-xl-6": "MuiGrid-grid-xl-6",
                            "grid-xl-7": "MuiGrid-grid-xl-7",
                            "grid-xl-8": "MuiGrid-grid-xl-8",
                            "grid-xl-9": "MuiGrid-grid-xl-9",
                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                            "grid-xl-true": "MuiGrid-grid-xl-true",
                            "grid-xs-1": "MuiGrid-grid-xs-1",
                            "grid-xs-10": "MuiGrid-grid-xs-10",
                            "grid-xs-11": "MuiGrid-grid-xs-11",
                            "grid-xs-12": "MuiGrid-grid-xs-12",
                            "grid-xs-2": "MuiGrid-grid-xs-2",
                            "grid-xs-3": "MuiGrid-grid-xs-3",
                            "grid-xs-4": "MuiGrid-grid-xs-4",
                            "grid-xs-5": "MuiGrid-grid-xs-5",
                            "grid-xs-6": "MuiGrid-grid-xs-6",
                            "grid-xs-7": "MuiGrid-grid-xs-7",
                            "grid-xs-8": "MuiGrid-grid-xs-8",
                            "grid-xs-9": "MuiGrid-grid-xs-9",
                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                            "grid-xs-true": "MuiGrid-grid-xs-true",
                            "item": "MuiGrid-item",
                            "justify-xs-center": "MuiGrid-justify-xs-center",
                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                            "root": "MuiGrid-root",
                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                          }
                        }
                        item={true}
                        sm={12}
                        xs={12}
                      >
                        <div
                          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12"
                        >
                          <Field
                            component={[Function]}
                            data-test="password-field"
                            fullWidth={true}
                            id="password"
                            inputProps={
                              Object {
                                "data-testid": "password-field",
                              }
                            }
                            label="forms.aboutYou.password"
                            name="password"
                            required={true}
                            type="password"
                          >
                            <FormikMaterialUITextField
                              data-test="password-field"
                              field={
                                Object {
                                  "name": "password",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "value": "",
                                }
                              }
                              form={
                                Object {
                                  "dirty": false,
                                  "errors": Object {},
                                  "getFieldHelpers": [Function],
                                  "getFieldMeta": [Function],
                                  "getFieldProps": [Function],
                                  "handleBlur": [Function],
                                  "handleChange": [Function],
                                  "handleReset": [Function],
                                  "handleSubmit": [Function],
                                  "initialErrors": Object {},
                                  "initialStatus": undefined,
                                  "initialTouched": Object {},
                                  "initialValues": Object {
                                    "checked": false,
                                    "email": "",
                                    "firstName": "",
                                    "lastName": "",
                                    "password": "",
                                    "repeatPassword": "",
                                  },
                                  "isSubmitting": false,
                                  "isValid": true,
                                  "isValidating": false,
                                  "registerField": [Function],
                                  "resetForm": [Function],
                                  "setErrors": [Function],
                                  "setFieldError": [Function],
                                  "setFieldTouched": [Function],
                                  "setFieldValue": [Function],
                                  "setFormikState": [Function],
                                  "setStatus": [Function],
                                  "setSubmitting": [Function],
                                  "setTouched": [Function],
                                  "setValues": [Function],
                                  "status": undefined,
                                  "submitCount": 0,
                                  "submitForm": [Function],
                                  "touched": Object {},
                                  "unregisterField": [Function],
                                  "validateField": [Function],
                                  "validateForm": [Function],
                                  "validateOnBlur": true,
                                  "validateOnChange": true,
                                  "validateOnMount": false,
                                  "values": Object {
                                    "checked": false,
                                    "email": "",
                                    "firstName": "",
                                    "lastName": "",
                                    "password": "",
                                    "repeatPassword": "",
                                  },
                                }
                              }
                              fullWidth={true}
                              id="password"
                              inputProps={
                                Object {
                                  "data-testid": "password-field",
                                }
                              }
                              label="forms.aboutYou.password"
                              required={true}
                              type="password"
                            >
                              <WithStyles(ForwardRef(TextField))
                                data-test="password-field"
                                disabled={false}
                                fullWidth={true}
                                id="password"
                                inputProps={
                                  Object {
                                    "data-testid": "password-field",
                                  }
                                }
                                label="forms.aboutYou.password"
                                name="password"
                                onBlur={[Function]}
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              >
                                <ForwardRef(TextField)
                                  classes={
                                    Object {
                                      "root": "MuiTextField-root",
                                    }
                                  }
                                  data-test="password-field"
                                  disabled={false}
                                  fullWidth={true}
                                  id="password"
                                  inputProps={
                                    Object {
                                      "data-testid": "password-field",
                                    }
                                  }
                                  label="forms.aboutYou.password"
                                  name="password"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                >
                                  <WithStyles(ForwardRef(FormControl))
                                    className="MuiTextField-root"
                                    color="primary"
                                    data-test="password-field"
                                    disabled={false}
                                    error={false}
                                    fullWidth={true}
                                    required={true}
                                    variant="standard"
                                  >
                                    <ForwardRef(FormControl)
                                      className="MuiTextField-root"
                                      classes={
                                        Object {
                                          "fullWidth": "MuiFormControl-fullWidth",
                                          "marginDense": "MuiFormControl-marginDense",
                                          "marginNormal": "MuiFormControl-marginNormal",
                                          "root": "MuiFormControl-root",
                                        }
                                      }
                                      color="primary"
                                      data-test="password-field"
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      required={true}
                                      variant="standard"
                                    >
                                      <div
                                        className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                        data-test="password-field"
                                      >
                                        <WithStyles(ForwardRef(InputLabel))
                                          htmlFor="password"
                                          id="password-label"
                                        >
                                          <ForwardRef(InputLabel)
                                            classes={
                                              Object {
                                                "animated": "MuiInputLabel-animated",
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "filled": "MuiInputLabel-filled",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInputLabel-formControl",
                                                "marginDense": "MuiInputLabel-marginDense",
                                                "outlined": "MuiInputLabel-outlined",
                                                "required": "Mui-required",
                                                "root": "MuiInputLabel-root",
                                                "shrink": "MuiInputLabel-shrink",
                                              }
                                            }
                                            htmlFor="password"
                                            id="password-label"
                                          >
                                            <WithStyles(ForwardRef(FormLabel))
                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                              classes={
                                                Object {
                                                  "asterisk": "MuiInputLabel-asterisk",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "required": "Mui-required",
                                                }
                                              }
                                              data-shrink={false}
                                              htmlFor="password"
                                              id="password-label"
                                            >
                                              <ForwardRef(FormLabel)
                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "filled": "MuiFormLabel-filled",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "required": "Mui-required Mui-required",
                                                    "root": "MuiFormLabel-root",
                                                  }
                                                }
                                                data-shrink={false}
                                                htmlFor="password"
                                                id="password-label"
                                              >
                                                <label
                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated Mui-required Mui-required"
                                                  data-shrink={false}
                                                  htmlFor="password"
                                                  id="password-label"
                                                >
                                                  forms.aboutYou.password
                                                  <span
                                                    aria-hidden={true}
                                                    className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                  >
                                                     
                                                    *
                                                  </span>
                                                </label>
                                              </ForwardRef(FormLabel)>
                                            </WithStyles(ForwardRef(FormLabel))>
                                          </ForwardRef(InputLabel)>
                                        </WithStyles(ForwardRef(InputLabel))>
                                        <WithStyles(ForwardRef(Input))
                                          autoFocus={false}
                                          fullWidth={true}
                                          id="password"
                                          inputProps={
                                            Object {
                                              "data-testid": "password-field",
                                            }
                                          }
                                          multiline={false}
                                          name="password"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          type="password"
                                          value=""
                                        >
                                          <ForwardRef(Input)
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "colorSecondary": "MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInput-formControl",
                                                "fullWidth": "MuiInput-fullWidth",
                                                "input": "MuiInput-input",
                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInput-marginDense",
                                                "multiline": "MuiInput-multiline",
                                                "root": "MuiInput-root",
                                                "underline": "MuiInput-underline",
                                              }
                                            }
                                            fullWidth={true}
                                            id="password"
                                            inputProps={
                                              Object {
                                                "data-testid": "password-field",
                                              }
                                            }
                                            multiline={false}
                                            name="password"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            type="password"
                                            value=""
                                          >
                                            <WithStyles(ForwardRef(InputBase))
                                              autoFocus={false}
                                              classes={
                                                Object {
                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "formControl": "MuiInput-formControl",
                                                  "fullWidth": "MuiInput-fullWidth",
                                                  "input": "MuiInput-input",
                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInput-marginDense",
                                                  "multiline": "MuiInput-multiline",
                                                  "root": "MuiInput-root MuiInput-underline",
                                                  "underline": null,
                                                }
                                              }
                                              fullWidth={true}
                                              id="password"
                                              inputComponent="input"
                                              inputProps={
                                                Object {
                                                  "data-testid": "password-field",
                                                }
                                              }
                                              multiline={false}
                                              name="password"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              type="password"
                                              value=""
                                            >
                                              <ForwardRef(InputBase)
                                                autoFocus={false}
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                                    "adornedStart": "MuiInputBase-adornedStart",
                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                    "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                    "input": "MuiInputBase-input MuiInput-input",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                    "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                    "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                    "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                  }
                                                }
                                                fullWidth={true}
                                                id="password"
                                                inputComponent="input"
                                                inputProps={
                                                  Object {
                                                    "data-testid": "password-field",
                                                  }
                                                }
                                                multiline={false}
                                                name="password"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                type="password"
                                                value=""
                                              >
                                                <div
                                                  className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                                                  onClick={[Function]}
                                                >
                                                  <input
                                                    aria-invalid={false}
                                                    autoFocus={false}
                                                    className="MuiInputBase-input MuiInput-input"
                                                    data-testid="password-field"
                                                    disabled={false}
                                                    id="password"
                                                    name="password"
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    required={true}
                                                    type="password"
                                                    value=""
                                                  />
                                                </div>
                                              </ForwardRef(InputBase)>
                                            </WithStyles(ForwardRef(InputBase))>
                                          </ForwardRef(Input)>
                                        </WithStyles(ForwardRef(Input))>
                                      </div>
                                    </ForwardRef(FormControl)>
                                  </WithStyles(ForwardRef(FormControl))>
                                </ForwardRef(TextField)>
                              </WithStyles(ForwardRef(TextField))>
                            </FormikMaterialUITextField>
                          </Field>
                        </div>
                      </ForwardRef(Grid)>
                    </WithStyles(ForwardRef(Grid))>
                    <WithStyles(ForwardRef(Grid))
                      item={true}
                      sm={12}
                      xs={12}
                    >
                      <ForwardRef(Grid)
                        classes={
                          Object {
                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                            "container": "MuiGrid-container",
                            "direction-xs-column": "MuiGrid-direction-xs-column",
                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                            "grid-lg-1": "MuiGrid-grid-lg-1",
                            "grid-lg-10": "MuiGrid-grid-lg-10",
                            "grid-lg-11": "MuiGrid-grid-lg-11",
                            "grid-lg-12": "MuiGrid-grid-lg-12",
                            "grid-lg-2": "MuiGrid-grid-lg-2",
                            "grid-lg-3": "MuiGrid-grid-lg-3",
                            "grid-lg-4": "MuiGrid-grid-lg-4",
                            "grid-lg-5": "MuiGrid-grid-lg-5",
                            "grid-lg-6": "MuiGrid-grid-lg-6",
                            "grid-lg-7": "MuiGrid-grid-lg-7",
                            "grid-lg-8": "MuiGrid-grid-lg-8",
                            "grid-lg-9": "MuiGrid-grid-lg-9",
                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                            "grid-lg-true": "MuiGrid-grid-lg-true",
                            "grid-md-1": "MuiGrid-grid-md-1",
                            "grid-md-10": "MuiGrid-grid-md-10",
                            "grid-md-11": "MuiGrid-grid-md-11",
                            "grid-md-12": "MuiGrid-grid-md-12",
                            "grid-md-2": "MuiGrid-grid-md-2",
                            "grid-md-3": "MuiGrid-grid-md-3",
                            "grid-md-4": "MuiGrid-grid-md-4",
                            "grid-md-5": "MuiGrid-grid-md-5",
                            "grid-md-6": "MuiGrid-grid-md-6",
                            "grid-md-7": "MuiGrid-grid-md-7",
                            "grid-md-8": "MuiGrid-grid-md-8",
                            "grid-md-9": "MuiGrid-grid-md-9",
                            "grid-md-auto": "MuiGrid-grid-md-auto",
                            "grid-md-true": "MuiGrid-grid-md-true",
                            "grid-sm-1": "MuiGrid-grid-sm-1",
                            "grid-sm-10": "MuiGrid-grid-sm-10",
                            "grid-sm-11": "MuiGrid-grid-sm-11",
                            "grid-sm-12": "MuiGrid-grid-sm-12",
                            "grid-sm-2": "MuiGrid-grid-sm-2",
                            "grid-sm-3": "MuiGrid-grid-sm-3",
                            "grid-sm-4": "MuiGrid-grid-sm-4",
                            "grid-sm-5": "MuiGrid-grid-sm-5",
                            "grid-sm-6": "MuiGrid-grid-sm-6",
                            "grid-sm-7": "MuiGrid-grid-sm-7",
                            "grid-sm-8": "MuiGrid-grid-sm-8",
                            "grid-sm-9": "MuiGrid-grid-sm-9",
                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                            "grid-sm-true": "MuiGrid-grid-sm-true",
                            "grid-xl-1": "MuiGrid-grid-xl-1",
                            "grid-xl-10": "MuiGrid-grid-xl-10",
                            "grid-xl-11": "MuiGrid-grid-xl-11",
                            "grid-xl-12": "MuiGrid-grid-xl-12",
                            "grid-xl-2": "MuiGrid-grid-xl-2",
                            "grid-xl-3": "MuiGrid-grid-xl-3",
                            "grid-xl-4": "MuiGrid-grid-xl-4",
                            "grid-xl-5": "MuiGrid-grid-xl-5",
                            "grid-xl-6": "MuiGrid-grid-xl-6",
                            "grid-xl-7": "MuiGrid-grid-xl-7",
                            "grid-xl-8": "MuiGrid-grid-xl-8",
                            "grid-xl-9": "MuiGrid-grid-xl-9",
                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                            "grid-xl-true": "MuiGrid-grid-xl-true",
                            "grid-xs-1": "MuiGrid-grid-xs-1",
                            "grid-xs-10": "MuiGrid-grid-xs-10",
                            "grid-xs-11": "MuiGrid-grid-xs-11",
                            "grid-xs-12": "MuiGrid-grid-xs-12",
                            "grid-xs-2": "MuiGrid-grid-xs-2",
                            "grid-xs-3": "MuiGrid-grid-xs-3",
                            "grid-xs-4": "MuiGrid-grid-xs-4",
                            "grid-xs-5": "MuiGrid-grid-xs-5",
                            "grid-xs-6": "MuiGrid-grid-xs-6",
                            "grid-xs-7": "MuiGrid-grid-xs-7",
                            "grid-xs-8": "MuiGrid-grid-xs-8",
                            "grid-xs-9": "MuiGrid-grid-xs-9",
                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                            "grid-xs-true": "MuiGrid-grid-xs-true",
                            "item": "MuiGrid-item",
                            "justify-xs-center": "MuiGrid-justify-xs-center",
                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                            "root": "MuiGrid-root",
                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                          }
                        }
                        item={true}
                        sm={12}
                        xs={12}
                      >
                        <div
                          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12"
                        >
                          <Field
                            component={[Function]}
                            data-test="repeatPassword-field"
                            fullWidth={true}
                            id="repeatPassword"
                            inputProps={
                              Object {
                                "data-testid": "repeatPassword-field",
                              }
                            }
                            label="forms.aboutYou.repeatPassword"
                            name="repeatPassword"
                            required={true}
                            type="password"
                          >
                            <FormikMaterialUITextField
                              data-test="repeatPassword-field"
                              field={
                                Object {
                                  "name": "repeatPassword",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "value": "",
                                }
                              }
                              form={
                                Object {
                                  "dirty": false,
                                  "errors": Object {},
                                  "getFieldHelpers": [Function],
                                  "getFieldMeta": [Function],
                                  "getFieldProps": [Function],
                                  "handleBlur": [Function],
                                  "handleChange": [Function],
                                  "handleReset": [Function],
                                  "handleSubmit": [Function],
                                  "initialErrors": Object {},
                                  "initialStatus": undefined,
                                  "initialTouched": Object {},
                                  "initialValues": Object {
                                    "checked": false,
                                    "email": "",
                                    "firstName": "",
                                    "lastName": "",
                                    "password": "",
                                    "repeatPassword": "",
                                  },
                                  "isSubmitting": false,
                                  "isValid": true,
                                  "isValidating": false,
                                  "registerField": [Function],
                                  "resetForm": [Function],
                                  "setErrors": [Function],
                                  "setFieldError": [Function],
                                  "setFieldTouched": [Function],
                                  "setFieldValue": [Function],
                                  "setFormikState": [Function],
                                  "setStatus": [Function],
                                  "setSubmitting": [Function],
                                  "setTouched": [Function],
                                  "setValues": [Function],
                                  "status": undefined,
                                  "submitCount": 0,
                                  "submitForm": [Function],
                                  "touched": Object {},
                                  "unregisterField": [Function],
                                  "validateField": [Function],
                                  "validateForm": [Function],
                                  "validateOnBlur": true,
                                  "validateOnChange": true,
                                  "validateOnMount": false,
                                  "values": Object {
                                    "checked": false,
                                    "email": "",
                                    "firstName": "",
                                    "lastName": "",
                                    "password": "",
                                    "repeatPassword": "",
                                  },
                                }
                              }
                              fullWidth={true}
                              id="repeatPassword"
                              inputProps={
                                Object {
                                  "data-testid": "repeatPassword-field",
                                }
                              }
                              label="forms.aboutYou.repeatPassword"
                              required={true}
                              type="password"
                            >
                              <WithStyles(ForwardRef(TextField))
                                data-test="repeatPassword-field"
                                disabled={false}
                                fullWidth={true}
                                id="repeatPassword"
                                inputProps={
                                  Object {
                                    "data-testid": "repeatPassword-field",
                                  }
                                }
                                label="forms.aboutYou.repeatPassword"
                                name="repeatPassword"
                                onBlur={[Function]}
                                onChange={[Function]}
                                required={true}
                                type="password"
                                value=""
                              >
                                <ForwardRef(TextField)
                                  classes={
                                    Object {
                                      "root": "MuiTextField-root",
                                    }
                                  }
                                  data-test="repeatPassword-field"
                                  disabled={false}
                                  fullWidth={true}
                                  id="repeatPassword"
                                  inputProps={
                                    Object {
                                      "data-testid": "repeatPassword-field",
                                    }
                                  }
                                  label="forms.aboutYou.repeatPassword"
                                  name="repeatPassword"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                  value=""
                                >
                                  <WithStyles(ForwardRef(FormControl))
                                    className="MuiTextField-root"
                                    color="primary"
                                    data-test="repeatPassword-field"
                                    disabled={false}
                                    error={false}
                                    fullWidth={true}
                                    required={true}
                                    variant="standard"
                                  >
                                    <ForwardRef(FormControl)
                                      className="MuiTextField-root"
                                      classes={
                                        Object {
                                          "fullWidth": "MuiFormControl-fullWidth",
                                          "marginDense": "MuiFormControl-marginDense",
                                          "marginNormal": "MuiFormControl-marginNormal",
                                          "root": "MuiFormControl-root",
                                        }
                                      }
                                      color="primary"
                                      data-test="repeatPassword-field"
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      required={true}
                                      variant="standard"
                                    >
                                      <div
                                        className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                        data-test="repeatPassword-field"
                                      >
                                        <WithStyles(ForwardRef(InputLabel))
                                          htmlFor="repeatPassword"
                                          id="repeatPassword-label"
                                        >
                                          <ForwardRef(InputLabel)
                                            classes={
                                              Object {
                                                "animated": "MuiInputLabel-animated",
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "filled": "MuiInputLabel-filled",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInputLabel-formControl",
                                                "marginDense": "MuiInputLabel-marginDense",
                                                "outlined": "MuiInputLabel-outlined",
                                                "required": "Mui-required",
                                                "root": "MuiInputLabel-root",
                                                "shrink": "MuiInputLabel-shrink",
                                              }
                                            }
                                            htmlFor="repeatPassword"
                                            id="repeatPassword-label"
                                          >
                                            <WithStyles(ForwardRef(FormLabel))
                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                              classes={
                                                Object {
                                                  "asterisk": "MuiInputLabel-asterisk",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "required": "Mui-required",
                                                }
                                              }
                                              data-shrink={false}
                                              htmlFor="repeatPassword"
                                              id="repeatPassword-label"
                                            >
                                              <ForwardRef(FormLabel)
                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "filled": "MuiFormLabel-filled",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "required": "Mui-required Mui-required",
                                                    "root": "MuiFormLabel-root",
                                                  }
                                                }
                                                data-shrink={false}
                                                htmlFor="repeatPassword"
                                                id="repeatPassword-label"
                                              >
                                                <label
                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated Mui-required Mui-required"
                                                  data-shrink={false}
                                                  htmlFor="repeatPassword"
                                                  id="repeatPassword-label"
                                                >
                                                  forms.aboutYou.repeatPassword
                                                  <span
                                                    aria-hidden={true}
                                                    className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                  >
                                                     
                                                    *
                                                  </span>
                                                </label>
                                              </ForwardRef(FormLabel)>
                                            </WithStyles(ForwardRef(FormLabel))>
                                          </ForwardRef(InputLabel)>
                                        </WithStyles(ForwardRef(InputLabel))>
                                        <WithStyles(ForwardRef(Input))
                                          autoFocus={false}
                                          fullWidth={true}
                                          id="repeatPassword"
                                          inputProps={
                                            Object {
                                              "data-testid": "repeatPassword-field",
                                            }
                                          }
                                          multiline={false}
                                          name="repeatPassword"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          type="password"
                                          value=""
                                        >
                                          <ForwardRef(Input)
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "colorSecondary": "MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInput-formControl",
                                                "fullWidth": "MuiInput-fullWidth",
                                                "input": "MuiInput-input",
                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInput-marginDense",
                                                "multiline": "MuiInput-multiline",
                                                "root": "MuiInput-root",
                                                "underline": "MuiInput-underline",
                                              }
                                            }
                                            fullWidth={true}
                                            id="repeatPassword"
                                            inputProps={
                                              Object {
                                                "data-testid": "repeatPassword-field",
                                              }
                                            }
                                            multiline={false}
                                            name="repeatPassword"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            type="password"
                                            value=""
                                          >
                                            <WithStyles(ForwardRef(InputBase))
                                              autoFocus={false}
                                              classes={
                                                Object {
                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "formControl": "MuiInput-formControl",
                                                  "fullWidth": "MuiInput-fullWidth",
                                                  "input": "MuiInput-input",
                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInput-marginDense",
                                                  "multiline": "MuiInput-multiline",
                                                  "root": "MuiInput-root MuiInput-underline",
                                                  "underline": null,
                                                }
                                              }
                                              fullWidth={true}
                                              id="repeatPassword"
                                              inputComponent="input"
                                              inputProps={
                                                Object {
                                                  "data-testid": "repeatPassword-field",
                                                }
                                              }
                                              multiline={false}
                                              name="repeatPassword"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              type="password"
                                              value=""
                                            >
                                              <ForwardRef(InputBase)
                                                autoFocus={false}
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                                    "adornedStart": "MuiInputBase-adornedStart",
                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                    "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                    "input": "MuiInputBase-input MuiInput-input",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                    "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                    "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                    "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                  }
                                                }
                                                fullWidth={true}
                                                id="repeatPassword"
                                                inputComponent="input"
                                                inputProps={
                                                  Object {
                                                    "data-testid": "repeatPassword-field",
                                                  }
                                                }
                                                multiline={false}
                                                name="repeatPassword"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                type="password"
                                                value=""
                                              >
                                                <div
                                                  className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                                                  onClick={[Function]}
                                                >
                                                  <input
                                                    aria-invalid={false}
                                                    autoFocus={false}
                                                    className="MuiInputBase-input MuiInput-input"
                                                    data-testid="repeatPassword-field"
                                                    disabled={false}
                                                    id="repeatPassword"
                                                    name="repeatPassword"
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    required={true}
                                                    type="password"
                                                    value=""
                                                  />
                                                </div>
                                              </ForwardRef(InputBase)>
                                            </WithStyles(ForwardRef(InputBase))>
                                          </ForwardRef(Input)>
                                        </WithStyles(ForwardRef(Input))>
                                      </div>
                                    </ForwardRef(FormControl)>
                                  </WithStyles(ForwardRef(FormControl))>
                                </ForwardRef(TextField)>
                              </WithStyles(ForwardRef(TextField))>
                            </FormikMaterialUITextField>
                          </Field>
                        </div>
                      </ForwardRef(Grid)>
                    </WithStyles(ForwardRef(Grid))>
                    <WithStyles(ForwardRef(Grid))
                      item={true}
                      xs={12}
                    >
                      <ForwardRef(Grid)
                        classes={
                          Object {
                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                            "container": "MuiGrid-container",
                            "direction-xs-column": "MuiGrid-direction-xs-column",
                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                            "grid-lg-1": "MuiGrid-grid-lg-1",
                            "grid-lg-10": "MuiGrid-grid-lg-10",
                            "grid-lg-11": "MuiGrid-grid-lg-11",
                            "grid-lg-12": "MuiGrid-grid-lg-12",
                            "grid-lg-2": "MuiGrid-grid-lg-2",
                            "grid-lg-3": "MuiGrid-grid-lg-3",
                            "grid-lg-4": "MuiGrid-grid-lg-4",
                            "grid-lg-5": "MuiGrid-grid-lg-5",
                            "grid-lg-6": "MuiGrid-grid-lg-6",
                            "grid-lg-7": "MuiGrid-grid-lg-7",
                            "grid-lg-8": "MuiGrid-grid-lg-8",
                            "grid-lg-9": "MuiGrid-grid-lg-9",
                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                            "grid-lg-true": "MuiGrid-grid-lg-true",
                            "grid-md-1": "MuiGrid-grid-md-1",
                            "grid-md-10": "MuiGrid-grid-md-10",
                            "grid-md-11": "MuiGrid-grid-md-11",
                            "grid-md-12": "MuiGrid-grid-md-12",
                            "grid-md-2": "MuiGrid-grid-md-2",
                            "grid-md-3": "MuiGrid-grid-md-3",
                            "grid-md-4": "MuiGrid-grid-md-4",
                            "grid-md-5": "MuiGrid-grid-md-5",
                            "grid-md-6": "MuiGrid-grid-md-6",
                            "grid-md-7": "MuiGrid-grid-md-7",
                            "grid-md-8": "MuiGrid-grid-md-8",
                            "grid-md-9": "MuiGrid-grid-md-9",
                            "grid-md-auto": "MuiGrid-grid-md-auto",
                            "grid-md-true": "MuiGrid-grid-md-true",
                            "grid-sm-1": "MuiGrid-grid-sm-1",
                            "grid-sm-10": "MuiGrid-grid-sm-10",
                            "grid-sm-11": "MuiGrid-grid-sm-11",
                            "grid-sm-12": "MuiGrid-grid-sm-12",
                            "grid-sm-2": "MuiGrid-grid-sm-2",
                            "grid-sm-3": "MuiGrid-grid-sm-3",
                            "grid-sm-4": "MuiGrid-grid-sm-4",
                            "grid-sm-5": "MuiGrid-grid-sm-5",
                            "grid-sm-6": "MuiGrid-grid-sm-6",
                            "grid-sm-7": "MuiGrid-grid-sm-7",
                            "grid-sm-8": "MuiGrid-grid-sm-8",
                            "grid-sm-9": "MuiGrid-grid-sm-9",
                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                            "grid-sm-true": "MuiGrid-grid-sm-true",
                            "grid-xl-1": "MuiGrid-grid-xl-1",
                            "grid-xl-10": "MuiGrid-grid-xl-10",
                            "grid-xl-11": "MuiGrid-grid-xl-11",
                            "grid-xl-12": "MuiGrid-grid-xl-12",
                            "grid-xl-2": "MuiGrid-grid-xl-2",
                            "grid-xl-3": "MuiGrid-grid-xl-3",
                            "grid-xl-4": "MuiGrid-grid-xl-4",
                            "grid-xl-5": "MuiGrid-grid-xl-5",
                            "grid-xl-6": "MuiGrid-grid-xl-6",
                            "grid-xl-7": "MuiGrid-grid-xl-7",
                            "grid-xl-8": "MuiGrid-grid-xl-8",
                            "grid-xl-9": "MuiGrid-grid-xl-9",
                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                            "grid-xl-true": "MuiGrid-grid-xl-true",
                            "grid-xs-1": "MuiGrid-grid-xs-1",
                            "grid-xs-10": "MuiGrid-grid-xs-10",
                            "grid-xs-11": "MuiGrid-grid-xs-11",
                            "grid-xs-12": "MuiGrid-grid-xs-12",
                            "grid-xs-2": "MuiGrid-grid-xs-2",
                            "grid-xs-3": "MuiGrid-grid-xs-3",
                            "grid-xs-4": "MuiGrid-grid-xs-4",
                            "grid-xs-5": "MuiGrid-grid-xs-5",
                            "grid-xs-6": "MuiGrid-grid-xs-6",
                            "grid-xs-7": "MuiGrid-grid-xs-7",
                            "grid-xs-8": "MuiGrid-grid-xs-8",
                            "grid-xs-9": "MuiGrid-grid-xs-9",
                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                            "grid-xs-true": "MuiGrid-grid-xs-true",
                            "item": "MuiGrid-item",
                            "justify-xs-center": "MuiGrid-justify-xs-center",
                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                            "root": "MuiGrid-root",
                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                          }
                        }
                        item={true}
                        xs={12}
                      >
                        <div
                          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                        >
                          <Field
                            Label={
                              Object {
                                "label": "forms.aboutYou.acceptTermsAndConditions",
                              }
                            }
                            component={[Function]}
                            data-test="terms-field"
                            inputProps={
                              Object {
                                "data-testid": "terms-field",
                              }
                            }
                            name="checked"
                            type="checkbox"
                          >
                            <FormikMaterialUICheckboxWithLabel
                              Label={
                                Object {
                                  "label": "forms.aboutYou.acceptTermsAndConditions",
                                }
                              }
                              data-test="terms-field"
                              field={
                                Object {
                                  "checked": false,
                                  "name": "checked",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "value": false,
                                }
                              }
                              form={
                                Object {
                                  "dirty": false,
                                  "errors": Object {},
                                  "getFieldHelpers": [Function],
                                  "getFieldMeta": [Function],
                                  "getFieldProps": [Function],
                                  "handleBlur": [Function],
                                  "handleChange": [Function],
                                  "handleReset": [Function],
                                  "handleSubmit": [Function],
                                  "initialErrors": Object {},
                                  "initialStatus": undefined,
                                  "initialTouched": Object {},
                                  "initialValues": Object {
                                    "checked": false,
                                    "email": "",
                                    "firstName": "",
                                    "lastName": "",
                                    "password": "",
                                    "repeatPassword": "",
                                  },
                                  "isSubmitting": false,
                                  "isValid": true,
                                  "isValidating": false,
                                  "registerField": [Function],
                                  "resetForm": [Function],
                                  "setErrors": [Function],
                                  "setFieldError": [Function],
                                  "setFieldTouched": [Function],
                                  "setFieldValue": [Function],
                                  "setFormikState": [Function],
                                  "setStatus": [Function],
                                  "setSubmitting": [Function],
                                  "setTouched": [Function],
                                  "setValues": [Function],
                                  "status": undefined,
                                  "submitCount": 0,
                                  "submitForm": [Function],
                                  "touched": Object {},
                                  "unregisterField": [Function],
                                  "validateField": [Function],
                                  "validateForm": [Function],
                                  "validateOnBlur": true,
                                  "validateOnChange": true,
                                  "validateOnMount": false,
                                  "values": Object {
                                    "checked": false,
                                    "email": "",
                                    "firstName": "",
                                    "lastName": "",
                                    "password": "",
                                    "repeatPassword": "",
                                  },
                                }
                              }
                              inputProps={
                                Object {
                                  "data-testid": "terms-field",
                                }
                              }
                              type="checkbox"
                            >
                              <WithStyles(ForwardRef(FormControlLabel))
                                control={
                                  <ForwardRef(WithStyles)
                                    checked={false}
                                    data-test="terms-field"
                                    disabled={false}
                                    indeterminate={false}
                                    inputProps={
                                      Object {
                                        "data-testid": "terms-field",
                                      }
                                    }
                                    name="checked"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value={false}
                                  />
                                }
                                label="forms.aboutYou.acceptTermsAndConditions"
                              >
                                <ForwardRef(FormControlLabel)
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "label": "MuiFormControlLabel-label",
                                      "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                      "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                      "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                      "root": "MuiFormControlLabel-root",
                                    }
                                  }
                                  control={
                                    <ForwardRef(WithStyles)
                                      checked={false}
                                      data-test="terms-field"
                                      disabled={false}
                                      indeterminate={false}
                                      inputProps={
                                        Object {
                                          "data-testid": "terms-field",
                                        }
                                      }
                                      name="checked"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      value={false}
                                    />
                                  }
                                  label="forms.aboutYou.acceptTermsAndConditions"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <WithStyles(ForwardRef(Checkbox))
                                      checked={false}
                                      data-test="terms-field"
                                      disabled={false}
                                      indeterminate={false}
                                      inputProps={
                                        Object {
                                          "data-testid": "terms-field",
                                        }
                                      }
                                      name="checked"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      value={false}
                                    >
                                      <ForwardRef(Checkbox)
                                        checked={false}
                                        classes={
                                          Object {
                                            "checked": "Mui-checked",
                                            "colorPrimary": "MuiCheckbox-colorPrimary",
                                            "colorSecondary": "MuiCheckbox-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "indeterminate": "MuiCheckbox-indeterminate",
                                            "root": "MuiCheckbox-root",
                                          }
                                        }
                                        data-test="terms-field"
                                        disabled={false}
                                        indeterminate={false}
                                        inputProps={
                                          Object {
                                            "data-testid": "terms-field",
                                          }
                                        }
                                        name="checked"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        value={false}
                                      >
                                        <WithStyles(ForwardRef(SwitchBase))
                                          checked={false}
                                          checkedIcon={<UNDEFINED />}
                                          classes={
                                            Object {
                                              "checked": "Mui-checked",
                                              "disabled": "Mui-disabled",
                                              "root": "MuiCheckbox-root MuiCheckbox-colorSecondary",
                                            }
                                          }
                                          color="secondary"
                                          data-test="terms-field"
                                          disabled={false}
                                          icon={<UNDEFINED />}
                                          inputProps={
                                            Object {
                                              "data-indeterminate": false,
                                              "data-testid": "terms-field",
                                            }
                                          }
                                          name="checked"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          type="checkbox"
                                          value={false}
                                        >
                                          <ForwardRef(SwitchBase)
                                            checked={false}
                                            checkedIcon={<UNDEFINED />}
                                            classes={
                                              Object {
                                                "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                                "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                                "input": "PrivateSwitchBase-input-4",
                                                "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorSecondary",
                                              }
                                            }
                                            color="secondary"
                                            data-test="terms-field"
                                            disabled={false}
                                            icon={<UNDEFINED />}
                                            inputProps={
                                              Object {
                                                "data-indeterminate": false,
                                                "data-testid": "terms-field",
                                              }
                                            }
                                            name="checked"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            type="checkbox"
                                            value={false}
                                          >
                                            <WithStyles(ForwardRef(IconButton))
                                              className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorSecondary"
                                              color="secondary"
                                              component="span"
                                              data-test="terms-field"
                                              disabled={false}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <ForwardRef(IconButton)
                                                className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorSecondary"
                                                classes={
                                                  Object {
                                                    "colorInherit": "MuiIconButton-colorInherit",
                                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                                    "edgeStart": "MuiIconButton-edgeStart",
                                                    "label": "MuiIconButton-label",
                                                    "root": "MuiIconButton-root",
                                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                                  }
                                                }
                                                color="secondary"
                                                component="span"
                                                data-test="terms-field"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  centerRipple={true}
                                                  className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                                  component="span"
                                                  data-test="terms-field"
                                                  disabled={false}
                                                  focusRipple={true}
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    centerRipple={true}
                                                    className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="span"
                                                    data-test="terms-field"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    tabIndex={null}
                                                  >
                                                    <span
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                                      data-test="terms-field"
                                                      onBlur={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      tabIndex={null}
                                                    >
                                                      <span
                                                        className="MuiIconButton-label"
                                                      >
                                                        <input
                                                          checked={false}
                                                          className="PrivateSwitchBase-input-4"
                                                          data-indeterminate={false}
                                                          data-testid="terms-field"
                                                          disabled={false}
                                                          name="checked"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                          value={false}
                                                        />
                                                        <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                            <ForwardRef(SvgIcon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                  "root": "MuiSvgIcon-root",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="MuiSvgIcon-root"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                      </span>
                                                      <WithStyles(memo)
                                                        center={true}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={true}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </span>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(IconButton)>
                                            </WithStyles(ForwardRef(IconButton))>
                                          </ForwardRef(SwitchBase)>
                                        </WithStyles(ForwardRef(SwitchBase))>
                                      </ForwardRef(Checkbox)>
                                    </WithStyles(ForwardRef(Checkbox))>
                                    <WithStyles(ForwardRef(Typography))
                                      className="MuiFormControlLabel-label"
                                      component="span"
                                    >
                                      <ForwardRef(Typography)
                                        className="MuiFormControlLabel-label"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        component="span"
                                      >
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                          forms.aboutYou.acceptTermsAndConditions
                                        </span>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </label>
                                </ForwardRef(FormControlLabel)>
                              </WithStyles(ForwardRef(FormControlLabel))>
                            </FormikMaterialUICheckboxWithLabel>
                          </Field>
                        </div>
                      </ForwardRef(Grid)>
                    </WithStyles(ForwardRef(Grid))>
                    <WithStyles(ForwardRef(Grid))
                      className="row row-center"
                      item={true}
                      xs={12}
                    >
                      <ForwardRef(Grid)
                        className="row row-center"
                        classes={
                          Object {
                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                            "container": "MuiGrid-container",
                            "direction-xs-column": "MuiGrid-direction-xs-column",
                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                            "grid-lg-1": "MuiGrid-grid-lg-1",
                            "grid-lg-10": "MuiGrid-grid-lg-10",
                            "grid-lg-11": "MuiGrid-grid-lg-11",
                            "grid-lg-12": "MuiGrid-grid-lg-12",
                            "grid-lg-2": "MuiGrid-grid-lg-2",
                            "grid-lg-3": "MuiGrid-grid-lg-3",
                            "grid-lg-4": "MuiGrid-grid-lg-4",
                            "grid-lg-5": "MuiGrid-grid-lg-5",
                            "grid-lg-6": "MuiGrid-grid-lg-6",
                            "grid-lg-7": "MuiGrid-grid-lg-7",
                            "grid-lg-8": "MuiGrid-grid-lg-8",
                            "grid-lg-9": "MuiGrid-grid-lg-9",
                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                            "grid-lg-true": "MuiGrid-grid-lg-true",
                            "grid-md-1": "MuiGrid-grid-md-1",
                            "grid-md-10": "MuiGrid-grid-md-10",
                            "grid-md-11": "MuiGrid-grid-md-11",
                            "grid-md-12": "MuiGrid-grid-md-12",
                            "grid-md-2": "MuiGrid-grid-md-2",
                            "grid-md-3": "MuiGrid-grid-md-3",
                            "grid-md-4": "MuiGrid-grid-md-4",
                            "grid-md-5": "MuiGrid-grid-md-5",
                            "grid-md-6": "MuiGrid-grid-md-6",
                            "grid-md-7": "MuiGrid-grid-md-7",
                            "grid-md-8": "MuiGrid-grid-md-8",
                            "grid-md-9": "MuiGrid-grid-md-9",
                            "grid-md-auto": "MuiGrid-grid-md-auto",
                            "grid-md-true": "MuiGrid-grid-md-true",
                            "grid-sm-1": "MuiGrid-grid-sm-1",
                            "grid-sm-10": "MuiGrid-grid-sm-10",
                            "grid-sm-11": "MuiGrid-grid-sm-11",
                            "grid-sm-12": "MuiGrid-grid-sm-12",
                            "grid-sm-2": "MuiGrid-grid-sm-2",
                            "grid-sm-3": "MuiGrid-grid-sm-3",
                            "grid-sm-4": "MuiGrid-grid-sm-4",
                            "grid-sm-5": "MuiGrid-grid-sm-5",
                            "grid-sm-6": "MuiGrid-grid-sm-6",
                            "grid-sm-7": "MuiGrid-grid-sm-7",
                            "grid-sm-8": "MuiGrid-grid-sm-8",
                            "grid-sm-9": "MuiGrid-grid-sm-9",
                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                            "grid-sm-true": "MuiGrid-grid-sm-true",
                            "grid-xl-1": "MuiGrid-grid-xl-1",
                            "grid-xl-10": "MuiGrid-grid-xl-10",
                            "grid-xl-11": "MuiGrid-grid-xl-11",
                            "grid-xl-12": "MuiGrid-grid-xl-12",
                            "grid-xl-2": "MuiGrid-grid-xl-2",
                            "grid-xl-3": "MuiGrid-grid-xl-3",
                            "grid-xl-4": "MuiGrid-grid-xl-4",
                            "grid-xl-5": "MuiGrid-grid-xl-5",
                            "grid-xl-6": "MuiGrid-grid-xl-6",
                            "grid-xl-7": "MuiGrid-grid-xl-7",
                            "grid-xl-8": "MuiGrid-grid-xl-8",
                            "grid-xl-9": "MuiGrid-grid-xl-9",
                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                            "grid-xl-true": "MuiGrid-grid-xl-true",
                            "grid-xs-1": "MuiGrid-grid-xs-1",
                            "grid-xs-10": "MuiGrid-grid-xs-10",
                            "grid-xs-11": "MuiGrid-grid-xs-11",
                            "grid-xs-12": "MuiGrid-grid-xs-12",
                            "grid-xs-2": "MuiGrid-grid-xs-2",
                            "grid-xs-3": "MuiGrid-grid-xs-3",
                            "grid-xs-4": "MuiGrid-grid-xs-4",
                            "grid-xs-5": "MuiGrid-grid-xs-5",
                            "grid-xs-6": "MuiGrid-grid-xs-6",
                            "grid-xs-7": "MuiGrid-grid-xs-7",
                            "grid-xs-8": "MuiGrid-grid-xs-8",
                            "grid-xs-9": "MuiGrid-grid-xs-9",
                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                            "grid-xs-true": "MuiGrid-grid-xs-true",
                            "item": "MuiGrid-item",
                            "justify-xs-center": "MuiGrid-justify-xs-center",
                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                            "root": "MuiGrid-root",
                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                          }
                        }
                        item={true}
                        xs={12}
                      >
                        <div
                          className="MuiGrid-root row row-center MuiGrid-item MuiGrid-grid-xs-12"
                        >
                          <WithStyles(ForwardRef(Button))
                            color="primary"
                            data-testid="submit-button"
                            disabled={true}
                            fullWidth={true}
                            onClick={[Function]}
                            variant="contained"
                          >
                            <ForwardRef(Button)
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disableElevation": "MuiButton-disableElevation",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              color="primary"
                              data-testid="submit-button"
                              disabled={true}
                              fullWidth={true}
                              onClick={[Function]}
                              variant="contained"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary Mui-disabled MuiButton-fullWidth"
                                component="button"
                                data-testid="submit-button"
                                disabled={true}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiButton-root MuiButton-contained MuiButton-containedPrimary Mui-disabled MuiButton-fullWidth"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  data-testid="submit-button"
                                  disabled={true}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary Mui-disabled MuiButton-fullWidth Mui-disabled"
                                    data-testid="submit-button"
                                    disabled={true}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={-1}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      forms.aboutYou.next
                                    </span>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                        </div>
                      </ForwardRef(Grid)>
                    </WithStyles(ForwardRef(Grid))>
                    <WithStyles(ForwardRef(Typography))
                      className="text-center"
                      style={
                        Object {
                          "width": "100%",
                        }
                      }
                    >
                      <ForwardRef(Typography)
                        className="text-center"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        style={
                          Object {
                            "width": "100%",
                          }
                        }
                      >
                        <p
                          className="MuiTypography-root text-center MuiTypography-body1"
                          style={
                            Object {
                              "width": "100%",
                            }
                          }
                        >
                          forms.aboutYou.alreadyHaveAnAccount
                           
                          <Link
                            to="/login"
                          >
                            <LinkAnchor
                              href="/login"
                              navigate={[Function]}
                            >
                              <a
                                href="/login"
                                onClick={[Function]}
                              >
                                forms.aboutYou.signIn
                              </a>
                            </LinkAnchor>
                          </Link>
                        </p>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </div>
                </ForwardRef(Grid)>
              </WithStyles(ForwardRef(Grid))>
            </form>
          </Form>
        </Formik>
      </AboutYouForm>
    </Router>
  </BrowserRouter>
</ApolloProvider>
`;
